import React, { Component } from 'react'
import { Row,Col, message} from 'antd'
import axios from 'axios'
import propTypes from 'prop-types'

import { wyAxiosPost } from '../components/WyAxios'
import { host } from '../components/Host'
import Line from '../components/Line'
import WyDatePicker from '../components/WyDatePicker'
import WySpin from '../components/WySpin'


class TemplateForLineWhenNew extends Component{
  state = {
    curViewData: {},
    curTime:[],
    xxx: [],
    yyy: [],
    unit:'',
    isSpining: false
  }
  getViewData = ()=>{
    let curViewData = {}
    if(this.state.curTime.length === 0){
      curViewData = this.state.curViewData
    }else{
      curViewData = Object.assign({},this.state.curViewData,{time_unit: this.state.curTime})
    }
    this.setState({
      isSpining: true
    })
    wyAxiosPost('Source/selectData',{info:curViewData},(result)=>{
      const responseData = result.data
      if(this.state.curTime.length === 0){
        let curTime = []
        curTime.push(responseData.start_time)
        curTime.push(responseData.last_time)
        this.setState({
          xxx: responseData.xxx,
          yyy: responseData.yyy,
          unit: responseData.unit,
          isSpining: false,
          curTime
        })
      }else{
        this.setState({
          xxx: responseData.xxx,
          yyy: responseData.yyy,
          unit: responseData.unit,
          isSpining: false
        })
      }

    })
  }
  componentDidMount(){
    this.setState({
      curViewData: this.props.curViewData
    },()=>{
      this.getViewData()
    })
  }
  curTimeChange = (value)=>{
    this.setState({
      curTime: value
    },()=>{
      this.getViewData()
    })
  }
  deleteModule = ()=>{
    this.props.deleteModule(this.props.viewId)
  }
  chartClick = (params,id)=>{
     console.log(
    //   params.name,
    //   params.componentType,
    //   params.seriesType,
    //   params.seriesIndex,
    //   params.seriesName,
    //   params.name,
    //   params.dataIndex,
    //   params.data,
    //   params.value,
       id
    )
    // this.props.setDropListInfo(
    //    [
    //
    //   ],
    //   {x:0+"px",y:0+"px"},
    //   false
    // )
  }


  chartContextmenu = (params,id,event)=>{
    let e = event || window.event
    const xPosition = e.pageX
    const yPosition = e.pageY
    console.log(e)
    this.props.setDropListInfo(
       [
        {name: '吃饭',url:'www.baidu.com',key:'a'},
        {name: '睡觉',url:'www.baidu.com',key:'b'},
        {name: '哈哈',url:'www.baidu.com',key:'c'},
        {name: '逛街',url:'www.baidu.com',key:'d'}
      ],
      {x:xPosition+"px",y:yPosition+"px"},
      true
    )
  }
  render(){
    return(
      <div className="amodule">
         <div className="moduleHeader">
          <span>{this.state.curViewData.moduleName}</span>
          <span style={{float: "right",cursor:"pointer"}} onClick={this.deleteModule}>
            <i className="fa fa-times" aria-hidden="true"></i>
          </span>
          <span style={{float: "right",marginRight:"10px"}}>
            <WyDatePicker
              curTime={this.state.curTime}
              rangeTimeChange={this.curTimeChange}
            />
          </span>
         </div>
         <div className="moduleBody">
         <WySpin isSpining={this.state.isSpining}>
            <Line
              viewId={this.props.viewId}
              xData={this.state.xxx}
              yData={this.state.yyy}
              aUnit={this.state.unit}
              onChartClick={this.chartClick}
              onContextmenu={this.chartContextmenu}
            />
          </WySpin>
        </div>
      </div>
    )
  }
}

TemplateForLineWhenNew.propTypes = {
  viewId: propTypes.string.isRequired,
  curViewData: propTypes.object.isRequired
}

export default TemplateForLineWhenNew
