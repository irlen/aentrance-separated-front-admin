import React, { Component } from 'react'
import { Row, Col, Input, Button } from 'antd'
import _ from 'lodash'


import { wyAxiosPost } from '../components/WyAxios'
import WyDatePicker from '../components/WyDatePicker'
import WyTable from '../components/WyTable'
import WySpin from '../components/WySpin'
import Line from '../components/Line'

class AlertDetail extends Component{
  constructor(props){
    super(props)
    this.compileColumns = (activeRowKey,initColumns)=>{
      let newColumns
      if(initColumns.length > 0){
        newColumns = initColumns.map(item=>{
          const str = ''
           item.render = (text, record, index) => {
             if(record.key === activeRowKey){
               return <span style={{cursor: "pointer",display: "inline-block",width: "100%"}} className="activeRow" > {text} </span>
             }else{
              return <span style={{cursor: "pointer",display: "inline-block",width: "100%"}} className="" > {text} </span>
             }
           }
           return item
        })
      }
      return newColumns
    }
  }
  state = {
    allTime: [],
    xData: [],
    yData: [],
    activeRowKey:'',

    lxData: [],
    lyData: [],
    searchStr:'',
    isSpaning: false
  }
  componentDidMount(){
    wyAxiosPost('Alert/getAlertDetail',{},(result)=>{
      const responseData = result.data.msg

      const activeRowKey = responseData.yyy && responseData.yyy.length>0?responseData.yyy[0].key:''
      //const appName = responseData.yyy && responseData.yyy.length>0?responseData.yyy[0].key:''
      //const stringName = responseData.yyy && responseData.yyy.length>0?responseData.yyy[0].name:''
      const newColumns = this.compileColumns(activeRowKey,responseData.xxx)
      let allTime = []
      if(this.state.allTime.length === 0){
        allTime.push(responseData.start_time)
        allTime.push(responseData.last_time)
        this.setState({
          initColumns: responseData.xxx,
          xData: newColumns,
          yData: responseData.yyy,
          allTime,
          activeRowKey,
          isSpining: false,
        })
      }else{
        this.setState({
          initColumns: responseData.xxx,
          xData: newColumns,
          yData: responseData.yyy,
          isSpining: false
        })
      }

    })
  }
  allTimeChange = (value)=>{
    this.setState({
      allTime: value
    })
  }
  searchStrChange = (e)=>{
    this.setState({
      searchStr: e.target.value
    })
  }
  doSearch = ()=>{

  }
  tableClick = (record)=>{
    const activeRowKey = record.key
    let newColumns = []
    newColumns = this.compileColumns(activeRowKey,this.state.xData)
    this.setState({
      xData: newColumns
    })
  }
  pageSizeChange = (current, size)=>{
    this.setState({
      pageSize: size
    })
  }
  render(){
    return(
      <div>
        <Row>
          <Col style={{lineHeight:"60px"}}>
            <span>时间：<WyDatePicker curTime={this.state.allTime} rangeTimeChange={this.allTimeChange} size="default" style={{maxWidth: "280px",marginLeft:"20px"}}/></span>
            <span style={{float: "right",marginRight:"20px"}}>
              <Input style={{width: "150px"}} value={this.state.searchStr} onChange={this.searchStrChange}/>
              <Button type="primary" onClick={this.doSearch}>搜索</Button>
            </span>
          </Col>
        </Row>
        <Row>
          <Col>
            <div className="amodule">
            <WySpin isSpining={this.state.isSpining}>
              <WyTable
                activeRowKey={this.state.activeRowKey}
                xData={this.state.xData?this.state.xData:[]}
                yData={this.state.yData?this.state.yData:[]}
                onTableClick={this.tableClick}
                pageSize={this.state.pageSize}
                onShowSizeChange={this.pageSizeChange}
                onTableContextmenu={this.tableContextmenu}
                dropListInfo={_.cloneDeep(this.state.dropListInfo)}
              />
            </WySpin>
            </div>
          </Col>
        </Row>
        <Row>
          <Col>
            <div className="amodule">
              <Line
                lxData={this.state.lxData?this.state.lxData:[]}
                lyData={this.state.lyData?this.state.lyData:[]}
              />
            </div>
          </Col>
        </Row>


      </div>
    )
  }
}

export default AlertDetail
