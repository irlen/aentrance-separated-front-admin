import React, { Component } from 'react'
import { Drawer } from 'antd'
import { Scrollbars } from 'react-custom-scrollbars'
import $ from 'jquery'


import { wyAxiosPost } from '../components/WyAxios'
import GenerateViewContainer from './GenerateViewContainer'

class SetView extends Component{
  static defaultProps = {
    className: "layout",
    cols: 24,
    margin:[10,10],
    rowHeight: 20,
    autoSize: true,
    onLayoutChange: function(){}
  }
  state = {
    visible: false,
    sHeight: '0px',
    layout: [],
    modules:[],
  }
  componentDidMount(){
    const windowH = parseInt(document.body.clientHeight,0)-104
    this.setState({
      sHeight: windowH+'px'
    })
    $(window).resize(()=>{
      const rwindowH = parseInt(document.body.clientHeight,0)-104
      this.setState({
        sHeight: rwindowH+'px'
      })
    })
  }
  componentWillReceiveProps(nextProps){
    const modules = nextProps.modules
    this.setState({
      modules
    })
  }
  //取出数据库里面的modules
  showModal = ()=>{
    wyAxiosPost('Screen/getScreen',{},(result)=>{
      const responseData = result.data.msg.modules
      this.props.doInitModules(responseData)
    })
    this.setState({
      visible: true
    })
  }
  onClose = ()=>{
    this.props.setFresh()
    this.setState({
      visible: false
    })
  }

  //拖放事件
  dropEvent =  (event)=>{
    const e = event || window.event
    e.preventDefault();
    const data = JSON.parse(e.dataTransfer.getData("viewattr"));
    //随机数作为id
    const randomCount = Math.random();
    const curTime = new Date().getTime();
    const asId = parseInt(randomCount,10) + parseInt(curTime,10)*100
    const id = asId.toString()
    data.id = id
    data.position = {
      i:id,
      h:13,
      w:12,
      x:0,
      y:0
    }
    data.data = {}
    this.props.doAdd(data)
  }
  dragOverEvent = (event)=>{
    const e = event || window.event
    e.preventDefault();
  }
  dragStartEvent = (event)=>{
    const e = event || window.event
    e.dataTransfer.setData("viewattr",e.target.getAttribute('viewattr'));
  }
  render(){
    return(
      <div>
        <div style={{width: "100%",height:"30px",lineHeight:"30px"}}>
          <span
            style={{float:"right",margin:"6px 10px 0 0", cursor:"pointer"}}
            title="页面构建"
            onClick={this.showModal}
          >
            <i className="fa fa-cog" aria-hidden="true"></i>
          </span>
        </div>
        <Drawer
          title="总览构建"
          placement="right"
          closable={false}
          onClose={this.onClose}
          visible={this.state.visible}
          closable={true}
          width="90%"
        >
          <div style={{display: "flex"}}>
            <div style={{flex:"0 0 100px"}}>
              <Scrollbars
                autoHide
                autoHideTimeout={100}
                autoHideDuration={200}
                universal={true}
                style={{height:this.state.sHeight,borderRight:"rgba(255,255,255,0.2) solid 1px"}}
              >
                  <ul style={{padding: "2px 20px 2px 20px"}}>
                    <li>
                      <div
                        style={{width:"100%",height:"100px",cursor:"move"}}
                      >
                        <img
                          src={require("../asets/map.png")} alt="" width="100%"
                          draggable={true}
                          viewattr='{"viewType":"map"}'
                          onDragStart={this.dragStartEvent}
                        />
                      </div>
                    </li>
                    <li>
                      <div
                        style={{width:"100%",height:"100px",cursor:"move"}}
                      >
                        <img
                          src={require("../asets/line.png")} alt="" width="100%"
                          draggable={true}
                          viewattr='{"viewType":"line"}'
                          onDragStart={this.dragStartEvent}
                        />
                      </div>
                    </li>
                    <li>
                      <div
                        style={{width:"100%",height:"100px",cursor:"move"}}
                      >
                        <img
                          src={require("../asets/bar.png")} alt="" width="100%"
                          draggable={true}
                          viewattr='{"viewType":"bar"}'
                          onDragStart={this.dragStartEvent}
                        />
                      </div>
                    </li>
                    <li>
                      <div
                        style={{width:"100%",height:"100px",cursor:"move"}}
                      >
                        <img
                          src={require("../asets/column.png")} alt="" width="100%"
                          draggable={true}
                          viewattr='{"viewType":"column"}'
                          onDragStart={this.dragStartEvent}
                        />
                      </div>
                    </li>
                    <li>
                      <div
                        style={{width:"100%",height:"100px",cursor:"move"}}
                      >
                        <img
                          src={require("../asets/pie.png")} alt="" width="100%"
                          draggable={true}
                          viewattr='{"viewType":"pie"}'
                          onDragStart={this.dragStartEvent}
                        />
                      </div>
                    </li>
                    <li>
                      <div
                        style={{width:"100%",height:"100px",cursor:"move"}}
                      >
                        <img
                          src={require("../asets/table.png")} alt="" width="100%"
                          draggable={true}
                          viewattr='{"viewType":"table"}'
                          onDragStart={this.dragStartEvent}
                        />
                      </div>
                    </li>
                    <li>
                      <div
                        style={{width:"100%",height:"100px",cursor:"move"}}
                      >
                        <img
                          src={require("../asets/table.png")} alt="" width="100%"
                          draggable={true}
                          viewattr='{"viewType":"calc"}'
                          onDragStart={this.dragStartEvent}
                        />
                      </div>
                    </li>
                  </ul>
              </Scrollbars>
            </div>
            <div style={{flex:"1 1 auto"}}>
              <Scrollbars
                autoHide
                autoHideTimeout={100}
                autoHideDuration={200}
                universal={true}
                style={{height:this.state.sHeight}}
                onDrop={this.dropEvent}
                onDragOver={this.dragOverEvent}
                >
                  <GenerateViewContainer closeWindow={this.onClose} />
              </Scrollbars>
            </div>
          </div>
        </Drawer>
      </div>
    )
  }
}


export default SetView
