{"ast":null,"code":"//单个ip\nconst singleIp = /^((25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\.){3}(25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))$/; //const rangeIp = /((25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\.){3}(25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\-((25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\.){3}(25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))/;\n//ip段\n\nconst groupIp = /^((25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\.){3}(25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\/([8-9]|[1-2]\\d|3[0-1])$/; //ip范围\n\nconst rangeIp = str => {\n  const rangeIpRex = /^((25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\.){3}(25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\-((25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\.){3}(25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))$/;\n  let canBe = true;\n\n  if (!rangeIpRex.test(str)) {\n    canBe = false;\n  } else {\n    const index = str.search(/\\-/);\n    const ipone = str.substring(0, index);\n    const iptwo = str.substring(index + 1);\n    const iponeArray = ipone.split(\".\");\n    const iptwoArray = iptwo.split(\".\");\n    const iponeCount = parseInt(iponeArray[0], 0) * 1000000000000 + parseInt(iponeArray[1], 0) * 1000000000 + parseInt(iponeArray[2], 0) * 1000000 + parseInt(iponeArray[3], 0) * 1000;\n    const iptwoCount = parseInt(iptwoArray[0], 0) * 1000000000000 + parseInt(iptwoArray[1], 0) * 1000000000 + parseInt(iptwoArray[2], 0) * 1000000 + parseInt(iptwoArray[3], 0) * 1000;\n\n    if (iponeCount > iptwoCount) {\n      canBe = false;\n    }\n  }\n\n  return canBe;\n}; //单个端口\n\n\nconst singlePort = /^([0-9]|[1-9]\\d{1,3}|[1-5]\\d{4}|6[0-4]\\d{4}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$/; //端口范围\n//const rangePort = /^([0-9]|[1-9]\\d{1,3}|[1-5]\\d{4}|6[0-4]\\d{4}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])-([0-9]|[1-9]\\d{1,3}|[1-5]\\d{4}|6[0-4]\\d{4}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$/\n\nconst rangePort = str => {\n  const rangePortRex = /^([0-9]|[1-9]\\d{1,3}|[1-5]\\d{4}|6[0-4]\\d{4}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])-([0-9]|[1-9]\\d{1,3}|[1-5]\\d{4}|6[0-4]\\d{4}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$/;\n  let canBe = true;\n\n  if (!rangePortRex.test(str)) {\n    canBe = false;\n  } else {\n    const index = str.search(/\\-/);\n    const portone = str.substring(0, index);\n    const porttwo = str.substring(index + 1);\n\n    if (portone > porttwo) {\n      canBe = false;\n    }\n  }\n\n  return canBe;\n}; //正数（包括浮点型）\n\n\nconst forNumber = /^[0-9]\\.\\d+$|^[1-9]+\\.\\d+$|^[1-9][0-9]*$/; //名称相关\n\nconst forName = /^(?!_)(?!.*?_$)[a-zA-Z0-9_\\u4e00-\\u9fa5]+$/; //邮箱\n\nconst forEmail = /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/; //域名\n\nconst domainName = /^(?=^.{3,255}$)[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+$/;\nexport { singleIp, rangeIp, groupIp, singlePort, forName, forNumber, rangePort, forEmail, domainName };","map":{"version":3,"sources":["/industry/app/src/components/RegExp/index.js"],"names":["singleIp","groupIp","rangeIp","str","rangeIpRex","canBe","test","index","search","ipone","substring","iptwo","iponeArray","split","iptwoArray","iponeCount","parseInt","iptwoCount","singlePort","rangePort","rangePortRex","portone","porttwo","forNumber","forName","forEmail","domainName"],"mappings":"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","sourcesContent":["//单个ip\r\nconst singleIp = /^((25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\.){3}(25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))$/ ;\r\n//const rangeIp = /((25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\.){3}(25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\-((25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\.){3}(25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))/;\r\n\r\n//ip段\r\nconst groupIp = /^((25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\.){3}(25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\/([8-9]|[1-2]\\d|3[0-1])$/ ;\r\n\r\n//ip范围\r\nconst rangeIp = (str)=>{\r\n  const rangeIpRex = /^((25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\.){3}(25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\-((25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\.){3}(25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))$/;\r\n  let canBe = true\r\n  if(!rangeIpRex.test(str)){\r\n    canBe = false\r\n  }else{\r\n    const index = str.search(/\\-/)\r\n    const ipone = str.substring(0,index)\r\n    const iptwo = str.substring(index+1)\r\n    const iponeArray = ipone.split(\".\")\r\n    const iptwoArray = iptwo.split(\".\")\r\n    const iponeCount = parseInt(iponeArray[0],0)*1000000000000+parseInt(iponeArray[1],0)*1000000000+parseInt(iponeArray[2],0)*1000000+parseInt(iponeArray[3],0)*1000;\r\n    const iptwoCount = parseInt(iptwoArray[0],0)*1000000000000+parseInt(iptwoArray[1],0)*1000000000+parseInt(iptwoArray[2],0)*1000000+parseInt(iptwoArray[3],0)*1000;\r\n    if(iponeCount>iptwoCount){\r\n      canBe = false\r\n    }\r\n  }\r\n  return canBe\r\n}\r\n\r\n//单个端口\r\nconst singlePort = /^([0-9]|[1-9]\\d{1,3}|[1-5]\\d{4}|6[0-4]\\d{4}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$/\r\n\r\n//端口范围\r\n//const rangePort = /^([0-9]|[1-9]\\d{1,3}|[1-5]\\d{4}|6[0-4]\\d{4}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])-([0-9]|[1-9]\\d{1,3}|[1-5]\\d{4}|6[0-4]\\d{4}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$/\r\nconst rangePort = (str)=>{\r\n  const rangePortRex = /^([0-9]|[1-9]\\d{1,3}|[1-5]\\d{4}|6[0-4]\\d{4}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])-([0-9]|[1-9]\\d{1,3}|[1-5]\\d{4}|6[0-4]\\d{4}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$/\r\n  let canBe = true\r\n  if(!rangePortRex.test(str)){\r\n    canBe = false\r\n  }else{\r\n    const index = str.search(/\\-/)\r\n    const portone = str.substring(0,index)\r\n    const porttwo = str.substring(index+1)\r\n    if(portone>porttwo){\r\n      canBe = false\r\n    }\r\n  }\r\n  return canBe\r\n}\r\n//正数（包括浮点型）\r\nconst forNumber = /^[0-9]\\.\\d+$|^[1-9]+\\.\\d+$|^[1-9][0-9]*$/\r\n\r\n//名称相关\r\nconst forName = /^(?!_)(?!.*?_$)[a-zA-Z0-9_\\u4e00-\\u9fa5]+$/\r\n\r\n//邮箱\r\nconst forEmail = /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/\r\n//域名\r\nconst domainName = /^(?=^.{3,255}$)[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+$/\r\n\r\n\r\nexport { singleIp, rangeIp, groupIp, singlePort, forName, forNumber, rangePort, forEmail, domainName }\r\n"]},"metadata":{},"sourceType":"module"}