{"ast":null,"code":"var _jsxFileName = \"/industry/app/src/DashboardManage/TemplateForMap.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport { wyAxiosPost } from '../components/WyAxios';\nimport WySpin from '../components/WySpin';\nimport Map from '../components/Map';\nimport mapStyle from './mapStyle';\nimport * as regions from './regions';\n\nclass TemplateForMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mapData: {},\n      autoHeight: 0,\n      id: '',\n      showViewData: {},\n      updateTime: 0\n    };\n\n    this.getCurViewData = () => {\n      if (this.state.showViewData.data && Object.keys(this.state.showViewData.data).length > 0) {\n        const info = _.cloneDeep(this.state.showViewData.data);\n\n        info.viewType = this.state.showViewData.viewType;\n        info.pageId = this.props.pageId;\n        wyAxiosPost('Dashboard/getModuleData', {\n          info\n        }, result => {\n          const responseData = result.data.msg;\n          let checkCityList = {};\n          const cityList = regions[responseData.region];\n\n          if (cityList && cityList.length > 0) {\n            cityList.map(item => {\n              checkCityList[item.name] = item.coordinate;\n            });\n          }\n\n          const compiledLineData = () => {\n            const lineData = _.cloneDeep(responseData.lineData);\n\n            if (lineData && lineData.length > 0) {\n              lineData.map(item => {\n                const coords = [];\n                coords.push(checkCityList[item.fromCity]);\n                coords.push(checkCityList[item.toCity]);\n                item.coords = coords;\n\n                if (item.value === '0') {\n                  //流量为零的时候，控制发光效果和线条颜色\n                  item.lightColor = 'rgba(255,255,255,0)'; //无流量时发光效果的颜色\n\n                  item.lineColor = 'rgba(0,248,255,1)'; //无流量时线条颜色\n                } else {\n                  item.lightColor = 'rgba(255,255,255,0.64)'; //有流量时发光效果颜色\n\n                  item.lineColor = 'rgba(255,255,0,1)'; //有流量时线条颜色\n                }\n              });\n            }\n\n            return lineData;\n          };\n\n          const compiledPointData = () => {\n            let pointData = _.cloneDeep(responseData.pointData);\n\n            if (pointData && pointData.length > 0) {\n              pointData.map(item => {\n                let newValue = [];\n                newValue = checkCityList[item.city];\n                newValue.push(item.value);\n                item.value = newValue; // if(item.warning === 'normal'){\n                //   item.color=\"rgba(0,255,0,1)\" //无告警时候节点颜色\n                // }else if(item.warning === 'slight'){\n                //   item.color=\"rgba(255,241,0,1)\" //轻微告警节点颜色\n                // }else if(item.warning === 'serious'){\n                //   item.color=\"rgba(255,123,69,1)\" //严重告警节点颜色\n                // }\n              });\n            }\n\n            return pointData;\n          };\n\n          const mapData = {};\n          mapData.lineData = compiledLineData();\n          mapData.pointData = compiledPointData();\n          mapData.region = responseData.region;\n          mapData.unit = responseData.unit;\n          mapData.mapName = responseData.map_name;\n\n          if (this._isMounted) {\n            this.setState({\n              mapData\n            });\n          }\n        });\n      }\n    };\n\n    this.updateData = () => {\n      if (this.mapTimer1) {\n        clearInterval(this.mapTimer1);\n      }\n\n      const run = () => {\n        if (this.state.updateTime !== 0) {\n          if (this.mapTimer2) {\n            clearInterval(this.mapTimer2);\n          }\n\n          let time = this.state.updateTime;\n          this.mapTimer2 = setInterval(() => {\n            this.getCurViewData();\n          }, time * 1000);\n\n          if (this.mapTimer1) {\n            clearInterval(this.mapTimer1);\n          }\n        } else {\n          if (this.mapTimer2) {\n            clearInterval(this.mapTimer2);\n          }\n        }\n      };\n\n      this.mapTimer1 = setInterval(run, 5000);\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.setState({\n      showViewData: this.props.showViewData,\n      autoHeight: this.props.autoHeight,\n      updateTime: this.props.updateTime\n    }, () => {\n      this.getCurViewData();\n\n      if (this.state.updateTime && this.props.env !== 'set') {\n        this.updateData();\n      }\n    });\n\n    if (this.props.env !== 'set') {\n      this.timerMap = setTimeout(() => {\n        this.getCurViewData();\n      }, 1000);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!_.isEqual(this.props.showViewData, nextProps.showViewData) || this.props.autoHeight !== nextProps.autoHeight || this.props.updateTime && nextProps.upDateTime && this.props.updateTime !== nextProps.upDateTime) {\n      if (this._isMounted) {\n        this.setState({\n          showViewData: nextProps.showViewData,\n          autoHeight: nextProps.autoHeight,\n          updateTime: nextProps.updateTime\n        }, () => {\n          this.getCurViewData();\n\n          if (this.state.updateTime && this.props.env !== 'set') {\n            this.updateData();\n          }\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerMap) {\n      clearInterval(this.timerMap);\n    }\n\n    if (this.mapTimer1) {\n      clearInterval(this.mapTimer1);\n    }\n\n    if (this.mapTimer2) {\n      clearInterval(this.mapTimer2);\n    }\n\n    this._isMounted = false;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"amodule\",\n      style: {\n        margin: \"0px\",\n        background: mapStyle.moduleBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, this.props.env === 'set' ? '' : React.createElement(\"div\", {\n      className: \"moduleHeader\",\n      style: {\n        display: \"flex\",\n        background: \"rgba(255,255,255,0)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.state.showViewData.data && Object.keys(this.state.showViewData.data).length > 0 ? this.state.showViewData.data.moduleName : ''), React.createElement(\"div\", {\n      className: \"moduleBody\",\n      style: {\n        background: \"rgba(255,255,255,0)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Map, {\n      height: this.state.autoHeight,\n      mapData: this.state.mapData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default TemplateForMap;","map":{"version":3,"sources":["/industry/app/src/DashboardManage/TemplateForMap.js"],"names":["React","Component","_","wyAxiosPost","WySpin","Map","mapStyle","regions","TemplateForMap","state","mapData","autoHeight","id","showViewData","updateTime","getCurViewData","data","Object","keys","length","info","cloneDeep","viewType","pageId","props","result","responseData","msg","checkCityList","cityList","region","map","item","name","coordinate","compiledLineData","lineData","coords","push","fromCity","toCity","value","lightColor","lineColor","compiledPointData","pointData","newValue","city","unit","mapName","map_name","_isMounted","setState","updateData","mapTimer1","clearInterval","run","mapTimer2","time","setInterval","componentDidMount","env","timerMap","setTimeout","componentWillReceiveProps","nextProps","isEqual","upDateTime","componentWillUnmount","render","margin","background","moduleBackground","display","moduleName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport _ from 'lodash'\r\nimport { wyAxiosPost } from '../components/WyAxios'\r\nimport WySpin from '../components/WySpin'\r\nimport Map from '../components/Map'\r\nimport mapStyle from './mapStyle'\r\nimport * as regions from './regions'\r\n\r\nclass TemplateForMap extends Component{\r\n  state = {\r\n    mapData:{},\r\n    autoHeight: 0,\r\n    id:'',\r\n    showViewData:{},\r\n    updateTime: 0\r\n  }\r\n  getCurViewData = ()=>{\r\n    if(this.state.showViewData.data && Object.keys(this.state.showViewData.data).length>0){\r\n      const info = _.cloneDeep(this.state.showViewData.data)\r\n      info.viewType = this.state.showViewData.viewType\r\n      info.pageId = this.props.pageId\r\n      wyAxiosPost('Dashboard/getModuleData',{info},(result)=>{\r\n        const responseData = result.data.msg\r\n        let checkCityList = {}\r\n        const cityList = regions[responseData.region]\r\n        if(cityList && cityList.length>0){\r\n          cityList.map(item=>{\r\n            checkCityList[item.name] = item.coordinate\r\n          })\r\n        }\r\n        const compiledLineData = ()=>{\r\n          const lineData = _.cloneDeep(responseData.lineData)\r\n          if(lineData && lineData.length>0){\r\n            lineData.map(item=>{\r\n                const coords = []\r\n                coords.push(checkCityList[item.fromCity])\r\n                coords.push(checkCityList[item.toCity])\r\n                item.coords = coords\r\n                if(item.value === '0'){\r\n                  //流量为零的时候，控制发光效果和线条颜色\r\n                  item.lightColor= 'rgba(255,255,255,0)' //无流量时发光效果的颜色\r\n                  item.lineColor = 'rgba(0,248,255,1)' //无流量时线条颜色\r\n                }else{\r\n                  item.lightColor= 'rgba(255,255,255,0.64)' //有流量时发光效果颜色\r\n                  item.lineColor = 'rgba(255,255,0,1)' //有流量时线条颜色\r\n                }\r\n            })\r\n          }\r\n          return lineData\r\n        }\r\n        const compiledPointData = ()=>{\r\n          let pointData = _.cloneDeep(responseData.pointData)\r\n          if(pointData && pointData.length>0){\r\n            pointData.map(item=>{\r\n              let newValue = []\r\n              newValue = checkCityList[item.city]\r\n              newValue.push(item.value)\r\n              item.value = newValue\r\n              // if(item.warning === 'normal'){\r\n              //   item.color=\"rgba(0,255,0,1)\" //无告警时候节点颜色\r\n              // }else if(item.warning === 'slight'){\r\n              //   item.color=\"rgba(255,241,0,1)\" //轻微告警节点颜色\r\n              // }else if(item.warning === 'serious'){\r\n              //   item.color=\"rgba(255,123,69,1)\" //严重告警节点颜色\r\n              // }\r\n            })\r\n          }\r\n          return pointData\r\n        }\r\n        const mapData = {}\r\n        mapData.lineData = compiledLineData()\r\n        mapData.pointData = compiledPointData()\r\n        mapData.region = responseData.region\r\n        mapData.unit = responseData.unit\r\n        mapData.mapName = responseData.map_name\r\n        if(this._isMounted){\r\n          this.setState({\r\n            mapData\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n  //数据更新\r\n  updateData = ()=>{\r\n    if(this.mapTimer1){\r\n      clearInterval(this.mapTimer1)\r\n    }\r\n    const run = ()=>{\r\n      if(this.state.updateTime !== 0){\r\n        if(this.mapTimer2){\r\n          clearInterval(this.mapTimer2)\r\n        }\r\n        let time = this.state.updateTime\r\n        this.mapTimer2 = setInterval(()=>{\r\n          this.getCurViewData()\r\n        },time*1000)\r\n        if(this.mapTimer1){\r\n          clearInterval(this.mapTimer1)\r\n        }\r\n      }else{\r\n        if(this.mapTimer2){\r\n          clearInterval(this.mapTimer2)\r\n        }\r\n      }\r\n    }\r\n    this.mapTimer1 = setInterval(run,5000)\r\n  }\r\n  componentDidMount(){\r\n    this._isMounted = true\r\n    this.setState({\r\n      showViewData: this.props.showViewData,\r\n      autoHeight: this.props.autoHeight,\r\n      updateTime: this.props.updateTime\r\n    },()=>{\r\n      this.getCurViewData()\r\n      if(this.state.updateTime && this.props.env !== 'set'){\r\n        this.updateData()\r\n      }\r\n    })\r\n    if(this.props.env !== 'set'){\r\n      this.timerMap = setTimeout(()=>{\r\n        this.getCurViewData()\r\n      },1000)\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n    if(\r\n      ! _.isEqual(this.props.showViewData,nextProps.showViewData) ||\r\n      this.props.autoHeight !== nextProps.autoHeight ||\r\n      (this.props.updateTime && nextProps.upDateTime && this.props.updateTime !== nextProps.upDateTime)\r\n    ){\r\n      if(this._isMounted){\r\n        this.setState({\r\n          showViewData: nextProps.showViewData,\r\n          autoHeight: nextProps.autoHeight,\r\n          updateTime: nextProps.updateTime\r\n        },()=>{\r\n          this.getCurViewData()\r\n          if(this.state.updateTime && this.props.env !== 'set'){\r\n            this.updateData()\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n  componentWillUnmount(){\r\n    if(this.timerMap){\r\n      clearInterval(this.timerMap)\r\n    }\r\n    if(this.mapTimer1){\r\n      clearInterval(this.mapTimer1)\r\n    }\r\n    if(this.mapTimer2){\r\n      clearInterval(this.mapTimer2)\r\n    }\r\n    this._isMounted = false\r\n  }\r\n  render(){\r\n    return(\r\n      <div className=\"amodule\" style={{margin:\"0px\",background: mapStyle.moduleBackground}}>\r\n        {\r\n          this.props.env === 'set'?\r\n          ''\r\n          :\r\n          <div className=\"moduleHeader\" style={{\r\n            display:\"flex\",\r\n            background:\"rgba(255,255,255,0)\"\r\n          }}>\r\n            {this.state.showViewData.data && Object.keys(this.state.showViewData.data).length>0?this.state.showViewData.data.moduleName:''}\r\n          </div>\r\n        }\r\n        <div className=\"moduleBody\" style={{\r\n          background:\"rgba(255,255,255,0)\"\r\n        }}>\r\n          <Map height={this.state.autoHeight} mapData={this.state.mapData}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TemplateForMap\r\n"]},"metadata":{},"sourceType":"module"}