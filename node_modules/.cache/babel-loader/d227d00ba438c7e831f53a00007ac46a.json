{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _component = require('./component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _common = require('../utils/common');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * @file 地图主文件\n * @author kyle(hinikai@gmail.com)\n */\n\n\nvar Map = function (_Component) {\n  _inherits(Map, _Component);\n\n  function Map(args) {\n    _classCallCheck(this, Map);\n\n    return _possibleConstructorReturn(this, (Map.__proto__ || Object.getPrototypeOf(Map)).call(this, args));\n  }\n  /**\n   * 设置默认的props属性\n   */\n\n\n  _createClass(Map, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.initMap();\n      this.forceUpdate();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var preCenter = prevProps.center;\n      var center = this.props.center;\n\n      if ((0, _common.isString)(center)) {\n        // 可以传入城市名\n        if (preCenter != center) {\n          this.map.centerAndZoom(center);\n        }\n      } else {\n        var isCenterChanged = preCenter && center && (preCenter.lng != center.lng || preCenter.lat != center.lat || this.props.forceUpdate);\n        var isZoomChanged = prevProps.zoom !== this.props.zoom && (this.props.zoom || this.props.forceUpdate);\n        var center = new BMap.Point(center.lng, center.lat);\n\n        if (isCenterChanged && isZoomChanged) {\n          this.map.centerAndZoom(center, this.props.zoom);\n        } else if (isCenterChanged) {\n          this.map.setCenter(center);\n        } else if (isZoomChanged) {\n          this.map.zoomTo(this.props.zoom);\n        }\n      }\n    }\n  }, {\n    key: 'initMap',\n    value: function initMap() {\n      var _this2 = this; // 创建Map实例\n\n\n      var options = this.options;\n      options = this.getOptions(options);\n\n      if (this.props.enableMapClick !== true) {\n        options.enableMapClick = false;\n      }\n\n      var map = new BMap.Map(this.refs.map, options);\n      this.map = map;\n      var zoom = this.props.zoom; // 在 centerAndZoom() 之前执行事件绑定否则load无法正常触发\n\n      this.bindEvent(map, this.events);\n\n      if ((0, _common.isString)(this.props.center)) {\n        // 可以传入城市名\n        map.centerAndZoom(this.props.center);\n      } else {\n        // 正常传入经纬度坐标\n        var center = new BMap.Point(this.props.center.lng, this.props.center.lat);\n        map.centerAndZoom(center, zoom); // 初始化地图,设置中心点坐标和地图级别\n      }\n\n      if (this.props.mapStyleV2) {\n        map.setMapStyleV2(this.props.mapStyleV2);\n      } else if (this.props.mapStyle) {\n        map.setMapStyle(this.props.mapStyle);\n      }\n\n      this.bindToggleMeghods(map, this.toggleMethods);\n      var lastZoom = zoom;\n      map.addEventListener('zoomend', function () {\n        var zoom = map.getZoom();\n        _this2.props.zoom_changed && _this2.props.zoom_changed(zoom, lastZoom);\n        lastZoom = zoom;\n      });\n    }\n  }, {\n    key: 'renderChildren',\n    value: function renderChildren() {\n      var _this3 = this;\n\n      var children = this.props.children;\n      if (!children || !this.map) return;\n      return _react2.default.Children.map(children, function (child) {\n        if (!child) {\n          return;\n        }\n\n        if (typeof child.type === 'string') {\n          return child;\n        } else {\n          return _react2.default.cloneElement(child, {\n            map: _this3.map\n          });\n        }\n      });\n    }\n  }, {\n    key: 'onRender',\n    value: function onRender() {\n      if (!this.props.render || !this.map) {\n        return;\n      }\n\n      return this.props.render(this.map);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var style = {\n        height: '100%',\n        position: 'relative'\n      };\n\n      for (var key in this.props.style) {\n        style[key] = this.props.style[key];\n      }\n\n      return _react2.default.createElement('div', {\n        style: style,\n        key: this.props.keys\n      }, _react2.default.createElement('div', {\n        ref: 'map',\n        className: this.props.className,\n        style: {\n          height: '100%'\n        }\n      }, \"\\u52A0\\u8F7D\\u5730\\u56FE\\u4E2D...\"), this.renderChildren(), this.onRender());\n    }\n  }, {\n    key: 'events',\n\n    /**\n     * 获取可以给地图绑定的事件名\n     */\n    get: function get() {\n      return ['click', 'dblclick', 'rightclick', 'rightdblclick', 'maptypechange', 'mousemove', 'mouseover', 'mouseout', 'movestart', 'moving', 'moveend', 'zoomstart', 'zoomend', 'addoverlay', 'addcontrol', 'removecontrol', 'removeoverlay', 'clearoverlays', 'dragstart', 'dragging', 'dragend', 'addtilelayer', 'removetilelayer', 'load', 'resize', 'hotspotclick', 'hotspotover', 'hotspotout', 'tilesloaded', 'touchstart', 'touchmove', 'touchend', 'longpress'];\n    }\n  }, {\n    key: 'toggleMethods',\n    get: function get() {\n      return {\n        enableScrollWheelZoom: ['enableScrollWheelZoom', 'disableScrollWheelZoom'],\n        enableDragging: ['enableDragging', 'disableDragging'],\n        enableDoubleClickZoom: ['enableDoubleClickZoom', 'disableDoubleClickZoom'],\n        enableKeyboard: ['enableKeyboard', 'disableKeyboard'],\n        enableInertialDragging: ['enableInertialDragging', 'disableInertialDragging'],\n        enableContinuousZoom: ['enableContinuousZoom', 'disableContinuousZoom'],\n        enablePinchToZoom: ['enablePinchToZoom', 'disablePinchToZoom'],\n        enableAutoResize: ['enableAutoResize', 'disableAutoResize']\n      };\n    }\n  }, {\n    key: 'options',\n    get: function get() {\n      return ['minZoom', 'maxZoom', 'mapType', 'enableMapClick'];\n    }\n  }], [{\n    key: 'defaultProps',\n    get: function get() {\n      return {\n        style: {\n          height: '350px'\n          /*\n          center: {\n              lng: 105.403119,\n              lat: 38.028658\n          },\n          zoom: 5\n          */\n\n        }\n      };\n    }\n  }]);\n\n  return Map;\n}(_component2.default);\n\nexports.default = Map;","map":null,"metadata":{},"sourceType":"script"}