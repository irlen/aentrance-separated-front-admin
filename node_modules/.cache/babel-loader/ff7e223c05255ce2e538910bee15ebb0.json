{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nfunction isObj(obj) {\n  return ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' || typeof obj === 'function') && obj !== null;\n} // 深度克隆\n\n\nfunction deepClone(obj) {\n  var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new WeakMap();\n  var cloneObj = void 0;\n  var Constructor = obj.constructor;\n\n  switch (Constructor) {\n    case RegExp:\n      cloneObj = new Constructor(obj);\n      break;\n\n    case Date:\n      cloneObj = new Constructor(obj.getTime());\n      break;\n\n    default:\n      if (hash.has(obj)) return hash.get(obj);\n      cloneObj = new Constructor();\n      hash.set(obj, cloneObj);\n  }\n\n  for (var key in obj) {\n    cloneObj[key] = isObj(obj[key]) ? deepClone(obj[key], hash) : obj[key];\n  }\n\n  return cloneObj;\n} // const deepClone = (obj) => {\n//     var proto = Object.getPrototypeOf(obj);\n//     return Object.assign({}, Object.create(proto), obj);\n// }\n\n\nexports.default = deepClone;","map":null,"metadata":{},"sourceType":"script"}