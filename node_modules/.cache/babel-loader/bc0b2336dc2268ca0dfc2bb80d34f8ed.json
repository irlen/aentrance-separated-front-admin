{"ast":null,"code":"var _jsxFileName = \"/industry/app/src/DashboardManage/TemplateForTable.js\";\nimport React, { Component } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport { withRouter } from 'react-router-dom';\nimport WyTable from '../components/WyTable';\nimport { wyAxiosPost } from '../components/WyAxios';\nimport WyDatePicker from '../components/WyDatePicker';\nimport WySpin from '../components/WySpin'; //import contextList from '../SubPage/ContextList'\n\nclass TemplateForTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showViewData: {},\n      xData: [],\n      yData: [],\n      subTime: [],\n      isSpining: false,\n      autoHeight: 0,\n      pageSize: 10,\n      updateTime: 0 //获取数据\n\n    };\n\n    this.getCurViewData = () => {\n      if (this.state.showViewData.data && Object.keys(this.state.showViewData.data).length > 0) {\n        const info = {};\n        info.viewType = this.state.showViewData.viewType;\n        info.api = this.state.showViewData.data.dataMethod;\n\n        if (this.state.subTime.length > 0 && this.props.env !== 'set') {\n          info.start_time = this.state.subTime[0];\n          info.last_time = this.state.subTime[1];\n        }\n\n        wyAxiosPost('Screen/getScreenData', {\n          info\n        }, result => {\n          const responseData = result.data.msg;\n\n          if (this.state.subTime.length === 0) {\n            const curTime = [];\n            curTime.push(responseData.start_time);\n            curTime.push(responseData.last_time);\n            this.setState({\n              xData: responseData.xxx,\n              yData: responseData.yyy,\n              subTime: _.cloneDeep(curTime)\n            });\n          } else {\n            this.setState({\n              xData: responseData.xxx,\n              yData: responseData.yyy\n            });\n          }\n        });\n      }\n    };\n\n    this.getCurViewDataForFresh = () => {\n      if (this.state.showViewData.data && Object.keys(this.state.showViewData.data).length > 0) {\n        const info = {};\n        info.viewType = this.state.showViewData.viewType;\n        info.api = this.state.showViewData.data.dataMethod;\n        wyAxiosPost('Screen/getScreenData', {\n          info\n        }, result => {\n          const responseData = result.data.msg;\n          const curTime = [];\n          curTime.push(responseData.start_time);\n          curTime.push(responseData.last_time);\n          this.setState({\n            xData: responseData.xxx,\n            yData: responseData.yyy,\n            subTime: _.cloneDeep(curTime)\n          });\n        });\n      }\n    };\n\n    this.updateData = () => {\n      if (this.tableTimer1) {\n        clearInterval(this.tableTimer1);\n      }\n\n      const run = () => {\n        if (this.state.updateTime !== 0) {\n          if (this.tableTimer2) {\n            clearInterval(this.tableTimer2);\n          }\n\n          let time = this.state.updateTime;\n          this.tableTimer2 = setInterval(() => {\n            this.getCurViewDataForFresh();\n          }, time * 1000);\n\n          if (this.tableTimer1) {\n            clearInterval(this.tableTimer1);\n          }\n        } else {\n          if (this.tableTimer2) {\n            clearInterval(this.tableTimer2);\n          }\n        }\n      };\n\n      this.tableTimer1 = setInterval(run, 5000);\n    };\n\n    this.subTimeChange = (value, event) => {\n      this.setState({\n        subTime: value\n      }, () => {\n        this.getCurViewData();\n      });\n    };\n\n    this.pageSizeChange = (current, size) => {\n      this.setState({\n        pageSize: size\n      });\n    };\n\n    this.tableContextmenu = (record, position, dom) => {\n      $('.drcontainer').removeClass('dropShow').addClass('dropHide');\n      $(dom).closest('.gridContainer').find('.drcontainer').removeClass('dropHide').addClass('dropShow'); // if(this.state.secondData){\n      //   if(this.state.secondData.is_app === 'no'){\n      //     const {listType,objType} = this.state.secondData\n      //     console.log(params)\n      //     let info ={\n      //       listType,\n      //       start_time: this.state.subTime[0],\n      //       last_time: this.state.subTime[1],\n      //       obj: params.name,\n      //       objType,\n      //       previousPath:this.props.location.pathname\n      //     }\n      //     this.props.setDropListInfo({\n      //        dropData: contextList(info),\n      //        dropPosition: {x:position.x+\"px\",y:position.y+\"px\"},\n      //        isexist: true\n      //     })\n      //   }\n      // }\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.showViewData.id) {\n      this.setState({\n        showViewData: this.props.showViewData,\n        autoHeight: this.props.autoHeight,\n        updateTime: this.props.updateTime\n      }, () => {\n        this.getCurViewData();\n\n        if (this.state.updateTime && this.props.env !== 'set') {\n          this.updateData();\n        }\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!_.isEqual(this.props.showViewData, nextProps.showViewData) || this.props.autoHeight !== nextProps.autoHeight || this.props.updateTime && nextProps.upDateTime && this.props.updateTime !== nextProps.upDateTime) {\n      this.setState({\n        showViewData: nextProps.showViewData,\n        autoHeight: nextProps.autoHeight\n      }, () => {\n        this.getCurViewData();\n\n        if (this.state.updateTime && this.props.env !== 'set') {\n          this.updateData();\n        }\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.tableTimer1) {\n      clearInterval(this.tableTimer1);\n    }\n\n    if (this.tableTimer2) {\n      clearInterval(this.tableTimer2);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"amodule\",\n      style: {\n        margin: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, this.props.env === 'set' ? '' : React.createElement(\"div\", {\n      className: \"moduleHeader\",\n      style: {\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"moduleHeaderIn\",\n      style: {\n        flex: \"1 1 auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, this.state.showViewData.data && Object.keys(this.state.showViewData.data).length > 0 ? this.state.showViewData.data.moduleName : ''), React.createElement(\"div\", {\n      style: {\n        float: \"right\",\n        flex: \"0 0 300px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(WyDatePicker, {\n      curTime: this.state.subTime,\n      rangeTimeChange: this.subTimeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"moduleBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Scrollbars, {\n      autoHide: true,\n      autoHideTimeout: 100,\n      autoHideDuration: 200,\n      universal: true,\n      style: {\n        height: this.state.autoHeight + 'px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(WySpin, {\n      isSpining: this.state.isSpining,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(WyTable, {\n      xData: this.state.xData ? this.state.xData : [],\n      yData: this.state.yData ? this.state.yData : [],\n      pageSize: this.state.pageSize,\n      onShowSizeChange: this.pageSizeChange //onTableContextmenu={this.tableContextmenu}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default withRouter(TemplateForTable);","map":{"version":3,"sources":["/industry/app/src/DashboardManage/TemplateForTable.js"],"names":["React","Component","Scrollbars","_","$","withRouter","WyTable","wyAxiosPost","WyDatePicker","WySpin","TemplateForTable","state","showViewData","xData","yData","subTime","isSpining","autoHeight","pageSize","updateTime","getCurViewData","data","Object","keys","length","info","viewType","api","dataMethod","props","env","start_time","last_time","result","responseData","msg","curTime","push","setState","xxx","yyy","cloneDeep","getCurViewDataForFresh","updateData","tableTimer1","clearInterval","run","tableTimer2","time","setInterval","subTimeChange","value","event","pageSizeChange","current","size","tableContextmenu","record","position","dom","removeClass","addClass","closest","find","componentDidMount","id","componentWillReceiveProps","nextProps","isEqual","upDateTime","componentWillUnmount","render","margin","display","flex","moduleName","float","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars'\r\nimport _ from 'lodash'\r\nimport $ from 'jquery'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport WyTable from '../components/WyTable'\r\nimport { wyAxiosPost } from '../components/WyAxios'\r\nimport WyDatePicker from '../components/WyDatePicker'\r\nimport WySpin from '../components/WySpin'\r\n//import contextList from '../SubPage/ContextList'\r\nclass TemplateForTable extends Component{\r\n  state = {\r\n    showViewData: {},\r\n    xData: [],\r\n    yData: [],\r\n\r\n    subTime: [],\r\n    isSpining: false,\r\n    autoHeight: 0,\r\n\r\n    pageSize: 10,\r\n    updateTime: 0\r\n  }\r\n  //获取数据\r\n  getCurViewData = ()=>{\r\n    if(this.state.showViewData.data && Object.keys(this.state.showViewData.data).length>0){\r\n      const info = {}\r\n      info.viewType = this.state.showViewData.viewType\r\n      info.api = this.state.showViewData.data.dataMethod\r\n      if(this.state.subTime.length>0 && this.props.env !== 'set'){\r\n        info.start_time = this.state.subTime[0]\r\n        info.last_time = this.state.subTime[1]\r\n      }\r\n      wyAxiosPost('Screen/getScreenData',{info},(result)=>{\r\n        const responseData = result.data.msg\r\n        if(this.state.subTime.length === 0){\r\n          const curTime = []\r\n          curTime.push(responseData.start_time)\r\n          curTime.push(responseData.last_time)\r\n          this.setState({\r\n            xData: responseData.xxx,\r\n            yData: responseData.yyy,\r\n            subTime: _.cloneDeep(curTime)\r\n          })\r\n        }else{\r\n          this.setState({\r\n            xData: responseData.xxx,\r\n            yData: responseData.yyy,\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n  getCurViewDataForFresh = ()=>{\r\n    if(this.state.showViewData.data && Object.keys(this.state.showViewData.data).length>0){\r\n      const info = {}\r\n      info.viewType = this.state.showViewData.viewType\r\n      info.api = this.state.showViewData.data.dataMethod\r\n      wyAxiosPost('Screen/getScreenData',{info},(result)=>{\r\n        const responseData = result.data.msg\r\n        const curTime = []\r\n        curTime.push(responseData.start_time)\r\n        curTime.push(responseData.last_time)\r\n        this.setState({\r\n          xData: responseData.xxx,\r\n          yData: responseData.yyy,\r\n          subTime: _.cloneDeep(curTime)\r\n        })\r\n      })\r\n    }\r\n  }\r\n  //数据更新\r\n  updateData = ()=>{\r\n    if(this.tableTimer1){\r\n      clearInterval(this.tableTimer1)\r\n    }\r\n    const run = ()=>{\r\n      if(this.state.updateTime !== 0){\r\n        if(this.tableTimer2){\r\n          clearInterval(this.tableTimer2)\r\n        }\r\n        let time = this.state.updateTime\r\n        this.tableTimer2 = setInterval(()=>{\r\n          this.getCurViewDataForFresh()\r\n        },time*1000)\r\n        if(this.tableTimer1){\r\n          clearInterval(this.tableTimer1)\r\n        }\r\n      }else{\r\n        if(this.tableTimer2){\r\n          clearInterval(this.tableTimer2)\r\n        }\r\n      }\r\n    }\r\n    this.tableTimer1 = setInterval(run,5000)\r\n  }\r\n  componentDidMount(){\r\n    if(this.props.showViewData.id){\r\n      this.setState({\r\n        showViewData: this.props.showViewData,\r\n        autoHeight: this.props.autoHeight,\r\n        updateTime: this.props.updateTime\r\n      },()=>{\r\n        this.getCurViewData()\r\n        if(this.state.updateTime && this.props.env !== 'set'){\r\n          this.updateData()\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n  subTimeChange = (value,event)=>{\r\n    this.setState({\r\n      subTime: value\r\n    },()=>{\r\n      this.getCurViewData()\r\n    })\r\n  }\r\n  pageSizeChange = (current, size)=>{\r\n    this.setState({\r\n      pageSize: size\r\n    })\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n    if(\r\n      ! (_.isEqual(this.props.showViewData,nextProps.showViewData)) ||\r\n      this.props.autoHeight !== nextProps.autoHeight ||\r\n      (this.props.updateTime && nextProps.upDateTime && this.props.updateTime !== nextProps.upDateTime)\r\n    ){\r\n      this.setState({\r\n        showViewData: nextProps.showViewData,\r\n        autoHeight: nextProps.autoHeight\r\n      },()=>{\r\n        this.getCurViewData()\r\n        if(this.state.updateTime && this.props.env !== 'set'){\r\n          this.updateData()\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    if(this.tableTimer1){\r\n      clearInterval(this.tableTimer1)\r\n    }\r\n    if(this.tableTimer2){\r\n      clearInterval(this.tableTimer2)\r\n    }\r\n  }\r\n  tableContextmenu = (record,position,dom)=>{\r\n    $('.drcontainer').removeClass('dropShow').addClass('dropHide')\r\n    $(dom).closest('.gridContainer').find('.drcontainer').removeClass('dropHide').addClass('dropShow')\r\n\r\n    // if(this.state.secondData){\r\n    //   if(this.state.secondData.is_app === 'no'){\r\n    //     const {listType,objType} = this.state.secondData\r\n    //     console.log(params)\r\n    //     let info ={\r\n    //       listType,\r\n    //       start_time: this.state.subTime[0],\r\n    //       last_time: this.state.subTime[1],\r\n    //       obj: params.name,\r\n    //       objType,\r\n    //       previousPath:this.props.location.pathname\r\n    //     }\r\n    //     this.props.setDropListInfo({\r\n    //        dropData: contextList(info),\r\n    //        dropPosition: {x:position.x+\"px\",y:position.y+\"px\"},\r\n    //        isexist: true\r\n    //     })\r\n    //   }\r\n    // }\r\n  }\r\n  render(){\r\n    return(\r\n      <div className=\"amodule\" style={{margin:\"0px\"}}>\r\n        {\r\n          this.props.env === 'set'?\r\n          ''\r\n          :\r\n          <div className=\"moduleHeader\" style={{display:\"flex\"}}>\r\n            <div className=\"moduleHeaderIn\"style={{flex:\"1 1 auto\"}}>\r\n              {this.state.showViewData.data && Object.keys(this.state.showViewData.data).length>0?this.state.showViewData.data.moduleName:''}\r\n            </div>\r\n              <div style={{float: \"right\",flex:\"0 0 300px\"}}>\r\n                <WyDatePicker curTime={this.state.subTime} rangeTimeChange={this.subTimeChange}/>\r\n              </div>\r\n          </div>\r\n        }\r\n        <div className=\"moduleBody\">\r\n          <Scrollbars\r\n            autoHide\r\n            autoHideTimeout={100}\r\n            autoHideDuration={200}\r\n            universal={true}\r\n            style={{height: this.state.autoHeight+'px'}}\r\n            >\r\n              <WySpin isSpining={this.state.isSpining}>\r\n                <WyTable\r\n                  xData={this.state.xData?this.state.xData:[]}\r\n                  yData={this.state.yData?this.state.yData:[]}\r\n                  pageSize={this.state.pageSize}\r\n                  onShowSizeChange={this.pageSizeChange}\r\n                  //onTableContextmenu={this.tableContextmenu}\r\n                />\r\n              </WySpin>\r\n          </Scrollbars>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(TemplateForTable)\r\n"]},"metadata":{},"sourceType":"module"}