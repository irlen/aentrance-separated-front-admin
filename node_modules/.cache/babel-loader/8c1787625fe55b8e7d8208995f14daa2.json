{"ast":null,"code":"import \"antd/es/tabs/style\";\nimport _Tabs from \"antd/es/tabs\";\nvar _jsxFileName = \"/industry/app/src/DashboardBuiltin/TemplateForColumn.js\";\n\n/** @jsx jsx */\nimport React, { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport _ from 'lodash';\nimport Column from '../components/Column';\nimport WyDatePicker from '../components/WyDatePicker';\nimport { wyAxiosPost } from '../components/WyAxios';\nimport WySpin from '../components/WySpin';\nconst TabPane = _Tabs.TabPane;\n\nclass TemplateForColumn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      xData: [],\n      yData: [],\n      curTime: [],\n      type: 'server',\n      appname: '',\n      field: '',\n      xData: [],\n      yData: [],\n      aUnit: '',\n      isSpaning: false\n    };\n\n    this.getData = () => {\n      let info = {};\n      const _this$state = this.state,\n            type = _this$state.type,\n            field = _this$state.field,\n            appname = _this$state.appname;\n      info = {\n        type,\n        field,\n        appname\n      };\n\n      if (this.state.curTime && this.state.curTime.length > 0) {\n        info.start_time = this.state.curTime[0];\n        info.last_time = this.state.curTime[1];\n      }\n\n      wyAxiosPost('App/getAppData', {\n        info\n      }, result => {\n        const responseData = result.data.msg;\n\n        if (this._isMounted) {\n          this.setState({\n            xData: _.cloneDeep(responseData.xxx),\n            yData: _.cloneDeep(responseData.yyy),\n            aUnit: responseData.unit\n          });\n        }\n      });\n    };\n\n    this.curTimeChange = value => {\n      if (this._isMounted) {\n        this.setState({\n          curTime: value\n        }, () => {\n          this.getData();\n        });\n      }\n    };\n\n    this.typeChange = value => {\n      if (this._isMounted) {\n        this.setState({\n          type: value\n        }, () => {\n          this.getData();\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    const _this$props = this.props,\n          appname = _this$props.appname,\n          field = _this$props.field,\n          type = _this$props.type;\n\n    if (this._isMounted) {\n      this.setState({\n        type: type[0],\n        appname,\n        field\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const _this$props2 = this.props,\n          allTime = _this$props2.allTime,\n          appname = _this$props2.appname;\n\n    if (appname !== nextProps.appname || !_.isEqual(allTime, nextProps.allTime)) {\n      if (this._isMounted && !_.isEqual(allTime, nextProps.allTime)) {\n        this.setState({\n          curTime: _.cloneDeep(nextProps.allTime),\n          appname: nextProps.appname\n        }, () => {\n          this.getData();\n        });\n      } else if (appname !== nextProps.appname) {\n        this.setState({\n          appname: nextProps.appname\n        }, () => {\n          this.getData();\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return jsx(_Tabs, {\n      tabBarExtraContent: jsx(WyDatePicker, {\n        curTime: this.state.curTime,\n        rangeTimeChange: this.curTimeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }),\n      onChange: this.typeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, jsx(TabPane, {\n      tab: this.props.tabs[0],\n      key: this.props.type[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, jsx(WySpin, {\n      isSpining: this.state.isSpaning,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, jsx(Column, {\n      xData: this.state.xData.length > 0 ? this.state.xData : [],\n      yData: this.state.yData.length > 0 ? this.state.yData : [],\n      aUnit: this.state.aUnit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }))), this.props.type.length > 1 ? jsx(TabPane, {\n      tab: this.props.tabs[1],\n      key: this.props.type[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, jsx(WySpin, {\n      isSpining: this.state.isSpaning,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, jsx(Column, {\n      xData: this.state.xData.length > 0 ? this.state.xData : [],\n      yData: this.state.yData.length > 0 ? this.state.yData : [],\n      aUnit: this.state.aUnit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }))) : '');\n  }\n\n}\n\nexport default TemplateForColumn;","map":{"version":3,"sources":["/industry/app/src/DashboardBuiltin/TemplateForColumn.js"],"names":["React","Component","jsx","css","_","Column","WyDatePicker","wyAxiosPost","WySpin","TabPane","TemplateForColumn","state","xData","yData","curTime","type","appname","field","aUnit","isSpaning","getData","info","length","start_time","last_time","result","responseData","data","msg","_isMounted","setState","cloneDeep","xxx","yyy","unit","curTimeChange","value","typeChange","componentDidMount","props","componentWillReceiveProps","nextProps","allTime","isEqual","componentWillUnmount","render","tabs"],"mappings":"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","sourcesContent":["/** @jsx jsx */\r\nimport React ,{ Component } from 'react'\r\nimport { jsx, css } from '@emotion/core'\r\nimport { Tabs } from 'antd'\r\nimport _ from 'lodash'\r\n\r\nimport Column from '../components/Column'\r\nimport WyDatePicker from '../components/WyDatePicker'\r\nimport {wyAxiosPost} from '../components/WyAxios'\r\nimport WySpin from '../components/WySpin'\r\nconst { TabPane } = Tabs\r\nclass TemplateForColumn extends Component{\r\n  state = {\r\n    xData: [],\r\n    yData: [],\r\n    curTime: [],\r\n    type: 'server',\r\n    appname: '',\r\n    field:'',\r\n    xData:[],\r\n    yData:[],\r\n    aUnit:'',\r\n    isSpaning: false\r\n  }\r\n  componentDidMount(){\r\n    this._isMounted = true\r\n    const { appname, field, type } = this.props\r\n\r\n    if(this._isMounted){\r\n      this.setState({\r\n        type: type[0],\r\n        appname,\r\n        field\r\n      })\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n    const { allTime, appname } = this.props\r\n    if(\r\n      (appname !== nextProps.appname) ||\r\n      (! _.isEqual(allTime, nextProps.allTime))\r\n    ){\r\n      if(this._isMounted && (! _.isEqual(allTime, nextProps.allTime)) ){\r\n        this.setState({\r\n          curTime: _.cloneDeep(nextProps.allTime),\r\n          appname: nextProps.appname\r\n        },()=>{\r\n          this.getData()\r\n        })\r\n      }else if(appname !== nextProps.appname){\r\n        this.setState({\r\n          appname: nextProps.appname\r\n        },()=>{\r\n          this.getData()\r\n        })\r\n      }\r\n    }\r\n  }\r\n  getData = ()=>{\r\n    let info = {}\r\n    const { type, field, appname }  =  this.state\r\n    info = {type,field,appname}\r\n    if(this.state.curTime && this.state.curTime.length>0){\r\n      info.start_time = this.state.curTime[0]\r\n      info.last_time = this.state.curTime[1]\r\n    }\r\n    wyAxiosPost('App/getAppData',{info},(result)=>{\r\n      const responseData = result.data.msg\r\n      if(this._isMounted){\r\n        this.setState({\r\n          xData: _.cloneDeep(responseData.xxx),\r\n          yData: _.cloneDeep(responseData.yyy),\r\n          aUnit: responseData.unit\r\n        })\r\n      }\r\n    })\r\n  }\r\n  curTimeChange = (value)=>{\r\n    if(this._isMounted){\r\n      this.setState({\r\n        curTime: value\r\n      },()=>{\r\n        this.getData()\r\n      })\r\n    }\r\n  }\r\n  typeChange = (value)=>{\r\n    if(this._isMounted){\r\n      this.setState({\r\n        type: value\r\n      },()=>{\r\n        this.getData()\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this._isMounted = false\r\n  }\r\n  render(){\r\n    return <Tabs tabBarExtraContent={\r\n      <WyDatePicker\r\n        curTime={this.state.curTime}\r\n        rangeTimeChange={this.curTimeChange}\r\n      />\r\n    }\r\n    onChange={this.typeChange}\r\n    >\r\n      <TabPane tab={this.props.tabs[0]} key={this.props.type[0]}>\r\n        <WySpin isSpining={this.state.isSpaning}>\r\n          <Column\r\n            xData={this.state.xData.length>0?this.state.xData:[]}\r\n            yData={this.state.yData.length>0?this.state.yData:[]}\r\n            aUnit={this.state.aUnit}\r\n          />\r\n        </WySpin>\r\n      </TabPane>\r\n      {\r\n        this.props.type.length>1?\r\n        <TabPane tab={this.props.tabs[1]} key={this.props.type[1]}>\r\n          <WySpin isSpining={this.state.isSpaning}>\r\n            <Column\r\n              xData={this.state.xData.length>0?this.state.xData:[]}\r\n              yData={this.state.yData.length>0?this.state.yData:[]}\r\n              aUnit={this.state.aUnit}\r\n            />\r\n          </WySpin>\r\n        </TabPane>\r\n        :\r\n        ''\r\n      }\r\n\r\n    </Tabs>\r\n\r\n  }\r\n}\r\n\r\nexport default TemplateForColumn\r\n"]},"metadata":{},"sourceType":"module"}