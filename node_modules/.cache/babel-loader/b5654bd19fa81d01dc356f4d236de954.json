{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @file http\n */\n\n/* globals XMLHttpRequest window location document*/\n\n/* eslint-disable */\n\n/**\n * get the data from url\n * auto use jsonp or ajax\n * @params 传入的参数\n * @params.method\n * @params.data\n * @params.url\n * @params.fail\n * @params.success\n */\n\nfunction fetch(params) {\n  var fetchObj = null;\n\n  if (/^http(s{0,1}):\\/\\//.test(params.url)) {\n    var pageLoc = location.href.match(/^https{0,1}:\\/\\/(.+?)(?=\\/|$)/);\n    var ajaxLoc = params.url.match(/^https{0,1}:\\/\\/(.+?)(?=\\/|$)/);\n\n    if (pageLoc.length === 2 && ajaxLoc.length === 2 && ajaxLoc[1] === pageLoc[1]) {\n      fetchObj = this.ajax(params);\n    } else {\n      fetchObj = this.jsonp(params);\n    }\n  } else {\n    fetchObj = this.ajax(params);\n  }\n\n  return fetchObj;\n}\n/**\n * @params.method\n * @params.data\n * @params.url\n * @params.fail\n * @params.success\n */\n\n\nfunction ajax(params) {\n  var _this = this;\n\n  var client = new XMLHttpRequest();\n  var method = params.method || 'GET';\n  var isAbort = false;\n  client.open(method, params.url); // client.setRequestHeader('Content-Type', 'application/json');\n\n  client.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n  client.withCredentials = true;\n\n  if (method === 'GET') {\n    client.send();\n  } else {\n    client.withCredentials = true;\n    client.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    var dataStr = Object.keys(params.data).map(function (key) {\n      return key + '=' + params.data[key];\n    });\n    client.send(dataStr.join('&'));\n  } // timeout\n\n\n  var timeout = setTimeout(function () {\n    client.abort();\n    params.fail && params.fail('timeout');\n  }, 10000); //\n\n  client.onload = function onload() {\n    if (this.status >= 200 && this.status < 300) {\n      params.success && params.success(JSON.parse(this.response));\n    } else {\n      params.fail && params.fail(this.statusText);\n    }\n\n    params.complete && params.complete(JSON.parse(this.response));\n    clearTimeout(timeout);\n  };\n\n  client.onerror = function () {\n    params.fail && params.fail(_this.statusText);\n    clearTimeout(timeout);\n  };\n\n  return {\n    abort: function abort() {\n      if (!isAbort) {\n        isAbort = true;\n        client.abort();\n      }\n    },\n    params: params\n  };\n}\n/**\n * @params 参数\n * @params.url\n * @params.fail\n * @params.success\n */\n\n\nfunction jsonp(params) {\n  var callbackID = 'jsonp_' + +new Date() + '_' + parseInt(Math.random() * 10e6, 10);\n  var script = document.createElement('script');\n  var isAbort = false;\n  params.url += params.url.indexOf('?') === '-1' ? '?' : '&';\n  params.url += 'callback=' + callbackID;\n  script.src = params.url;\n  document.head.appendChild(script);\n  var timeout = setTimeout(function () {\n    if (window[callbackID] !== null) {\n      window[callbackID] = null;\n      script.parentElement.removeChild(script); // console.log('abortStatus:' + isAbort + params.requestId);\n\n      params.fail && params.fail({\n        error: null,\n        msg: 'timeout'\n      });\n      params.complete && params.complete(JSON.parse());\n    }\n  }, 10000);\n  script.addEventListener('error', function (e) {\n    window[callbackID] = null;\n    script.parentElement.removeChild(script);\n    clearTimeout(timeout); // console.log('abortStatus:' + isAbort + params.requestId);\n\n    if (!isAbort) {\n      params.fail && params.fail({\n        error: e,\n        msg: 'loaderror'\n      });\n      params.complete && params.complete();\n    }\n  });\n\n  window[callbackID] = function (data) {\n    // console.log('abortStatus:' + isAbort + params.requestId);\n    clearTimeout(timeout);\n\n    if (!isAbort) {\n      params.success(data);\n      params.complete && params.complete();\n    }\n\n    window[callbackID] = null;\n    script.parentElement.removeChild(script);\n  };\n\n  return {\n    abort: function abort() {\n      // console.log('abort' + params.requestId);\n      clearTimeout(timeout);\n      isAbort = true;\n    },\n    params: params\n  };\n}\n\nvar http = {\n  fetch: fetch,\n  ajax: ajax,\n  jsonp: jsonp\n};\nexports.default = http;","map":null,"metadata":{},"sourceType":"script"}