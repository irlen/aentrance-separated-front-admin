{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _component = require('./component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * @file 图形基类\n * @author kyle(hinikai@gmail.com)\n */\n\n\nvar Graphy = function (_Component) {\n  _inherits(Graphy, _Component);\n\n  function Graphy(args) {\n    _classCallCheck(this, Graphy);\n\n    return _possibleConstructorReturn(this, (Graphy.__proto__ || Object.getPrototypeOf(Graphy)).call(this, args));\n  }\n\n  _createClass(Graphy, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      this.initialize();\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.initialize();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.destroy();\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.props.map.removeOverlay(this.overlay);\n      this.overlay = null;\n    }\n  }, {\n    key: 'initialize',\n    value: function initialize() {\n      var map = this.props.map;\n\n      if (!map) {\n        return;\n      }\n\n      this.destroy();\n      this.overlay = this.getOverlay();\n      this.bindEvent(this.overlay, this.events);\n      map.addOverlay(this.overlay);\n      var path = this.overlay.getPath();\n\n      if (path && path.length > 0 && this.props.autoViewport === true) {\n        map.setViewport(path, this.props.viewportOptions);\n      }\n    }\n  }, {\n    key: 'getOverlay',\n    value: function getOverlay() {\n      return null;\n    }\n  }, {\n    key: 'options',\n    get: function get() {\n      return ['strokeColor', 'fillColor', 'strokeWeight', 'strokeOpacity', 'fillOpacity', 'strokeStyle', 'enableMassClear', 'enableEditing', 'enableClicking'];\n    }\n    /**\n     * 获取可以绑定的事件名\n     */\n\n  }, {\n    key: 'events',\n    get: function get() {\n      return ['click', 'dblclick', 'mousedown', 'mouseup', 'mouseout', 'mouseover', 'remove', 'lineupdate'];\n    }\n  }]);\n\n  return Graphy;\n}(_component2.default);\n\nexports.default = Graphy;","map":null,"metadata":{},"sourceType":"script"}