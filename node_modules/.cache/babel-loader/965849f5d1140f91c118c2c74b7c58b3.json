{"ast":null,"code":"import _ from 'lodash';\n\nconst homeview = (state = {\n  modules: [],\n  id: ''\n}, action) => {\n  switch (action.type) {\n    case 'ADD_MODULE':\n      const newModules = state.modules ? _.cloneDeep(state.modules) : [];\n      newModules.push(action.moduleData);\n      return Object.assign({}, state, {\n        modules: newModules\n      });\n\n    case 'SET_POSITION':\n      const newPosition = _.cloneDeep(state.modules);\n\n      newPosition.map((item, index) => {\n        action.positions.map((subItem, subIndex) => {\n          if (item.id === subItem.i) {\n            const h = subItem.h,\n                  w = subItem.w,\n                  x = subItem.x,\n                  y = subItem.y;\n            newPosition[index].position = Object.assign({}, newPosition[index].position, {\n              h,\n              w,\n              x,\n              y\n            });\n            return;\n          }\n        });\n      });\n      return Object.assign({}, state, {\n        modules: newPosition\n      });\n\n    case 'DELETE_MODULE':\n      const deletedModules = _.cloneDeep(state.modules);\n\n      state.modules.map((item, index) => {\n        if (item.id === action.id) {\n          deletedModules.splice(index, 1);\n          return;\n        }\n      });\n      return Object.assign({}, state, {\n        modules: deletedModules\n      });\n\n    case 'SET_DATA':\n      const setModules = _.cloneDeep(state.modules);\n\n      setModules.map((item, index) => {\n        if (item.id === action.dataInfo.setId) {\n          setModules[index].data = Object.assign({}, item.data, action.dataInfo);\n        }\n      });\n      return Object.assign({}, state, {\n        modules: setModules\n      });\n\n    case 'INIT_MODULES':\n      return {\n        modules: action.modulesData.modules,\n        id: action.modulesData.id\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default homeview;","map":{"version":3,"sources":["/industry/app/src/reducers/homeview.js"],"names":["_","homeview","state","modules","id","action","type","newModules","cloneDeep","push","moduleData","Object","assign","newPosition","map","item","index","positions","subItem","subIndex","i","h","w","x","y","position","deletedModules","splice","setModules","dataInfo","setId","data","modulesData"],"mappings":"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","sourcesContent":["import _ from 'lodash'\r\nconst homeview = (state={modules: [],id:''},action)=>{\r\n   switch(action.type){\r\n    case 'ADD_MODULE':\r\n      const newModules = state.modules?_.cloneDeep(state.modules):[]\r\n       newModules.push(action.moduleData)\r\n      return Object.assign({},state,{modules:newModules})\r\n    case 'SET_POSITION':\r\n      const newPosition = _.cloneDeep(state.modules)\r\n      newPosition.map((item,index)=>{\r\n        action.positions.map((subItem,subIndex)=>{\r\n          if(item.id === subItem.i){\r\n            const {h,w,x,y} = subItem\r\n            newPosition[index].position = Object.assign({},newPosition[index].position,{h,w,x,y})\r\n            return\r\n          }\r\n        })\r\n      })\r\n      return  Object.assign({},state,{modules:newPosition})\r\n    case 'DELETE_MODULE':\r\n      const deletedModules = _.cloneDeep(state.modules)\r\n      state.modules.map((item,index)=>{\r\n        if(item.id === action.id){\r\n          deletedModules.splice(index,1)\r\n          return\r\n        }\r\n      })\r\n      return  Object.assign({},state,{modules:deletedModules})\r\n    case 'SET_DATA':\r\n      const setModules = _.cloneDeep(state.modules)\r\n      setModules.map((item,index)=>{\r\n        if(item.id === action.dataInfo.setId){\r\n          setModules[index].data = Object.assign({},item.data,action.dataInfo)\r\n        }\r\n      })\r\n      return  Object.assign({},state,{modules:setModules})\r\n    case 'INIT_MODULES':\r\n      return {modules: action.modulesData.modules,id: action.modulesData.id}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default homeview\r\n"]},"metadata":{},"sourceType":"module"}