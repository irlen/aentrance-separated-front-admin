{"ast":null,"code":"var _jsxFileName = \"/industry/app/src/WholeView/index.js\";\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport BdMap from '../components/BdMap';\n\nclass WholeView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mapW: ''\n    };\n  }\n\n  componentDidMount() {\n    const formap = document.querySelector(\".formap\"); //const windowH = parseInt(document.body.clientHeight,0)\n    // formapH = windowH +'px'\n\n    let formapW = window.getComputedStyle(formap).width || formap.style.width;\n    let formapH = window.getComputedStyle(formap).height || formap.style.height;\n\n    window.onresize = () => {\n      formapW = window.getComputedStyle(formap).width || formap.style.width;\n      formapH = window.getComputedStyle(formap).height || formap.style.height;\n    };\n  }\n\n  render() {\n    return jsx(\"div\", {\n      className: \"formap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, jsx(BdMap, {\n      style: {\n        width: \"100%\",\n        height: \"600px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default WholeView;","map":{"version":3,"sources":["/industry/app/src/WholeView/index.js"],"names":["jsx","css","styled","React","Component","$","BdMap","WholeView","constructor","props","state","mapW","componentDidMount","formap","document","querySelector","formapW","window","getComputedStyle","width","style","formapH","height","onresize","render"],"mappings":";;AAAA;AACA,SAASA,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;;AAGA,MAAMC,SAAN,SAAwBH,SAAxB,CAAiC;AAC/BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AADgB,SAGlBC,KAHkB,GAGV;AACNC,MAAAA,IAAI,EAAE;AADA,KAHU;AAEjB;;AAKDC,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAf,CADiB,CAEjB;AACA;;AACA,QAAIC,OAAO,GAAGC,MAAM,CAACC,gBAAP,CAAwBL,MAAxB,EAAgCM,KAAhC,IAAyCN,MAAM,CAACO,KAAP,CAAaD,KAApE;AACA,QAAIE,OAAO,GAAGJ,MAAM,CAACC,gBAAP,CAAwBL,MAAxB,EAAgCS,MAAhC,IAA0CT,MAAM,CAACO,KAAP,CAAaE,MAArE;;AAEAL,IAAAA,MAAM,CAACM,QAAP,GAAkB,MAAI;AACpBP,MAAAA,OAAO,GAAGC,MAAM,CAACC,gBAAP,CAAwBL,MAAxB,EAAgCM,KAAhC,IAAyCN,MAAM,CAACO,KAAP,CAAaD,KAAhE;AACAE,MAAAA,OAAO,GAAGJ,MAAM,CAACC,gBAAP,CAAwBL,MAAxB,EAAgCS,MAAhC,IAA0CT,MAAM,CAACO,KAAP,CAAaE,MAAjE;AACD,KAHD;AAID;;AAGDE,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,IAAC,KAAD;AACE,MAAA,KAAK,EAAE;AACLL,QAAAA,KAAK,EAAC,MADD;AAELG,QAAAA,MAAM,EAAC;AAFF,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAWD;;AAlC8B;;AAsCjC,eAAef,SAAf","sourcesContent":["/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport styled from '@emotion/styled'\r\nimport React, { Component } from 'react'\r\nimport $ from 'jquery'\r\n\r\nimport BdMap from '../components/BdMap'\r\n\r\n\r\nclass WholeView extends Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  state = {\r\n    mapW: ''\r\n  }\r\n\r\n  componentDidMount(){\r\n    const formap = document.querySelector(\".formap\")\r\n    //const windowH = parseInt(document.body.clientHeight,0)\r\n    // formapH = windowH +'px'\r\n    let formapW = window.getComputedStyle(formap).width || formap.style.width\r\n    let formapH = window.getComputedStyle(formap).height || formap.style.height\r\n\r\n    window.onresize = ()=>{\r\n      formapW = window.getComputedStyle(formap).width || formap.style.width\r\n      formapH = window.getComputedStyle(formap).height || formap.style.height\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"formap\">\r\n        <BdMap\r\n          style={{\r\n            width:\"100%\",\r\n            height:\"600px\"\r\n          }}\r\n\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default WholeView\r\n"]},"metadata":{},"sourceType":"module"}