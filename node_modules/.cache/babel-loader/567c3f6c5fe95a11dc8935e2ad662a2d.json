{"ast":null,"code":"import _ from 'lodash'; //生成正则\n\nconst isFloat = n => {\n  return n === +n && n !== (n | 0);\n};\n\nconst decodeStr = (before, instr, after, name, isEnd) => {\n  if (before && after && !before['selected'] && !after['selected']) {\n    var bl = before['str'][before['str'].length - 1]; //取之前最后一个值\n\n    var as = after['str'][0]; //取之后第一个值\n\n    if (bl === \"'\" && as === \"'\") {\n      return \"(?<\" + name + \">(?<=\\\\').*?(?=\\\\'))\";\n    } else if (bl === '\"' && as === '\"') {\n      return '(?<' + name + '>(?<=\\\\\").*?(?=\\\\\"))';\n    } else if (bl === '[' && as === ']') {\n      return \"(?<\" + name + \">(?<=\\\\[).*?(?=\\\\]))\";\n    } else if (bl === '{' && as === '}') {\n      return \"(?<\" + name + \">(?<=\\\\{).*?(?=\\\\}))\";\n    } else if (bl === '(' && as === ')') {\n      return \"(?<\" + name + \">(?<=\\\\().*?(?=\\\\)))\";\n    }\n  }\n\n  var _str = instr.split(' ');\n\n  if (isEnd && _str.length > 1) {\n    return \"(?<\" + name + \">.+)\";\n  }\n\n  var _s = instr;\n\n  _str.forEach((s, i) => {\n    //判断是否为数字\n    if (Number(s)) {\n      //判断是否为浮点数\n      if (isFloat(Number(s))) {\n        _s = _s.replace(s, \"[-+]?(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?\", 1);\n      } else {\n        _s = _s.replace(s, \"[-+]?\\\\d+\", 1);\n      }\n    } else {\n      _s = _s.replace(s, \"\\\\S+\", 1);\n    }\n  });\n\n  var r = '(?<' + name + '>' + _s + ')';\n  return r;\n};\n\nconst decodeChar = instr => {\n  var r = instr;\n\n  var _str = r.split(' ');\n\n  _str.forEach((s, i) => {\n    if (s.length > 1) {\n      if (s[s.length - 1] === ':') {\n        var p = '(.+?:)';\n        r = r.replace(s, p, 1);\n      } else if (s[s.length - 1] === '=') {\n        var p = '(.+?=)';\n        r = r.replace(s, p, 1);\n      } else {\n        var p = '\\\\S{' + s.length + '}';\n        r = r.replace(s, p, 1);\n      }\n    }\n  }); // r = r.replace('(','\\\\(')\n  // r = r.replace(')','\\\\)')\n  // r = r.replace('{','\\\\{')\n  // r = r.replace('}','\\\\}')\n\n\n  r = r.replace('[', '\\\\[');\n  r = r.replace(']', '\\\\]');\n  r = r.replace('\"', '\\\\\"');\n  r = r.replace(\"'\", \"\\\\'\");\n  return r;\n};\n\nconst decodeArr = (instr, source) => {\n  var p = '';\n\n  var t = _.cloneDeep(instr);\n\n  var before = null;\n  var after = null;\n  var end = t.pop(); //获取最后一个值并移除\n\n  for (var i = 0; i < t.length; i++) {\n    //判断i 不为第一个\n    if (i !== 0) {\n      before = t[i - 1];\n    } //判断i不为最后一个\n\n\n    if (i !== t.length - 1) {\n      after = t[i + 1];\n    } else {\n      after = end;\n    }\n\n    if (t[i]['selected']) {\n      var isEnd = false;\n\n      if (t[i]['end'] == source.length) {\n        isEnd = true;\n      }\n\n      p += decodeStr(before, t[i]['str'], after, t[i]['name'], isEnd);\n    } else {\n      p += decodeChar(t[i]['str']);\n    }\n\n    before = null;\n    after = null;\n  } //判断最后一个是否是截取的\n\n\n  if (end['selected']) {\n    p += decodeStr(end['str'], end['name']);\n  } else {\n    //不是截取的 取一个字符\n    if (end['str'].length >= 1) {\n      var s = end['str'][0];\n      p += decodeChar(s);\n    }\n  }\n\n  return p;\n};\n\nexport default decodeArr;","map":{"version":3,"sources":["/industry/app/src/SystemRule/decodeArr.js"],"names":["_","isFloat","n","decodeStr","before","instr","after","name","isEnd","bl","length","as","_str","split","_s","forEach","s","i","Number","replace","r","decodeChar","p","decodeArr","source","t","cloneDeep","end","pop"],"mappings":"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","sourcesContent":["import _ from 'lodash'\r\n\r\n//生成正则\r\nconst isFloat  = (n)=>{\r\n  return n===+n && n!==(n|0);\r\n}\r\nconst decodeStr = (before,instr,after, name, isEnd)=>{\r\n  if(before && after && !before['selected'] && !after['selected']){\r\n\t  var bl = before['str'][before['str'].length-1] //取之前最后一个值\r\n\t  var as = after['str'][0]\t//取之后第一个值\r\n\t  if (bl === \"'\" && as === \"'\"){\r\n\t\t  return \"(?<\"+name+\">(?<=\\\\').*?(?=\\\\'))\"\r\n\t  }\r\n\t  else if (bl === '\"' && as === '\"'){\r\n\t\t  return '(?<'+name+'>(?<=\\\\\").*?(?=\\\\\"))'\r\n\t  }\r\n\t  else if (bl === '[' && as === ']'){\r\n\r\n\t\t  return \"(?<\"+name+\">(?<=\\\\[).*?(?=\\\\]))\"\r\n\t  }\r\n\t  else if (bl === '{' && as === '}'){\r\n\t\t  return \"(?<\"+name+\">(?<=\\\\{).*?(?=\\\\}))\"\r\n\t  }\r\n\t  else if (bl === '(' && as === ')'){\r\n\t\t  return \"(?<\"+name+\">(?<=\\\\().*?(?=\\\\)))\"\r\n\t  }\r\n  }\r\n  var _str = instr.split(' ')\r\n  if (isEnd && _str.length > 1){\r\n\t  return \"(?<\"+name+\">.+)\"\r\n  }\r\n  \r\n  var _s = instr\r\n  _str.forEach((s,i)=>{\r\n    //判断是否为数字\r\n    if (Number(s)){\r\n      //判断是否为浮点数\r\n      if(isFloat(Number(s))){\r\n        _s = _s.replace(s, \"[-+]?(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?\",1)\r\n      }else{\r\n        _s = _s.replace(s,\"[-+]?\\\\d+\",1)\r\n      }\r\n    }else{\r\n      _s = _s.replace(s,\"\\\\S+\",1)\r\n    }\r\n  })\r\n  var r = '(?<'+name+'>'+_s+')'\r\n  return r\r\n}\r\nconst decodeChar = (instr)=>{\r\n  var r = instr\r\n  \r\n  var _str = r.split(' ')\r\n  _str.forEach((s, i)=>{\r\n    if (s.length > 1){\r\n\t\tif(s[s.length-1] === ':' ){\r\n\t\t\tvar p = '(.+?:)'\r\n\t\t\tr = r.replace(s,p,1)\r\n\t\t}\r\n\t\telse if (s[s.length-1] === '='){\r\n\t\t\tvar p = '(.+?=)'\r\n\t\t\tr = r.replace(s,p,1)\r\n\t\t}\t\r\n\t\telse{\r\n\t\t\tvar p= '\\\\S{'+s.length+'}'\r\n\t\t\tr = r.replace(s,p,1)\r\n\t\t}\r\n    }\r\n  })\r\n \r\n  // r = r.replace('(','\\\\(')\r\n  // r = r.replace(')','\\\\)')\r\n  // r = r.replace('{','\\\\{')\r\n  // r = r.replace('}','\\\\}')\r\n  r = r.replace('[','\\\\[')\r\n  r = r.replace(']','\\\\]')\r\n  r = r.replace('\"','\\\\\"')\r\n  r = r.replace(\"'\",\"\\\\'\")\r\n  \r\n  return r\r\n}\r\nconst decodeArr = (instr, source)=>{\r\n  var p = ''\r\n  var t = _.cloneDeep(instr)\r\n  var before=null\r\n  var after=null\r\n  var end = t.pop()\t//获取最后一个值并移除\r\n  \r\n  for (var i=0; i < t.length; i++){\r\n\t  //判断i 不为第一个\r\n\t  if (i !== 0){\r\n\t\t  before = t[i-1]\r\n\t  }\r\n\t  //判断i不为最后一个\r\n\t  if(i !== t.length - 1){\r\n\t\t  after = t[i+1]\r\n\t  }else\r\n\t  {\r\n\t\t  after = end\r\n\t  }\r\n\r\n\t  if (t[i]['selected']){\r\n\t\t  var isEnd = false\r\n\t\t  if (t[i]['end'] == source.length){\r\n\t\t\t  isEnd = true\r\n\t\t  }\r\n\t\t  p += decodeStr(before, t[i]['str'],after ,t[i]['name'], isEnd)\r\n\t  }else{\r\n\t\t  p += decodeChar(t[i]['str'])\r\n\t  }\r\n\r\n\t  before=null\r\n\t  after=null\r\n  }\r\n\r\n  //判断最后一个是否是截取的\r\n  if(end['selected']){\r\n\tp += decodeStr(end['str'], end['name'])\r\n  }else{\r\n\t  //不是截取的 取一个字符\r\n\t  if(end['str'].length>=1){\r\n\t\t  var s = end['str'][0]\r\n\t\t  p += decodeChar(s)\r\n\t  }\r\n  }\r\n\r\n  return p\r\n}\r\nexport default decodeArr\r\n"]},"metadata":{},"sourceType":"module"}