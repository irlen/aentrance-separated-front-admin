{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * @file 给地图添加监听事件\n * @author hedongran\n */\n\n/**\n * 防抖函数\n * @param method 事件触发的操作\n * @param delay 多少毫秒内连续触发事件，不会执行\n * @returns {Function}\n */\n\n\nfunction debounce(method, delay) {\n  var timer = null;\n  return function () {\n    var self = this,\n        args = arguments;\n    timer && clearTimeout(timer);\n    timer = setTimeout(function () {\n      method.apply(self, args);\n    }, delay);\n  };\n}\n/**\n * 节流函数\n * @param method 事件触发的操作\n * @param mustRunDelay 间隔多少毫秒需要触发一次事件\n * @returns {Function}\n */\n\n\nfunction throttle(method, mustRunDelay) {\n  var timer = void 0,\n      args = arguments,\n      start = void 0;\n  return function loop() {\n    var self = this;\n    var now = Date.now();\n\n    if (!start) {\n      start = now;\n    }\n\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    if (now - start >= mustRunDelay) {\n      method.apply(self, args);\n      start = now;\n    } else {\n      timer = setTimeout(function () {\n        loop.apply(self, args);\n      }, 50);\n    }\n  };\n}\n\nvar MapListener = function (_React$Component) {\n  _inherits(MapListener, _React$Component);\n\n  function MapListener(props) {\n    _classCallCheck(this, MapListener);\n\n    var _this = _possibleConstructorReturn(this, (MapListener.__proto__ || Object.getPrototypeOf(MapListener)).call(this, props));\n\n    _this.map = _this.props.map;\n    return _this;\n  }\n  /**\n   * 设置默认的props属性\n   */\n\n\n  _createClass(MapListener, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.props.onZoomend) {\n        this._bindZoomendEvent();\n      }\n\n      if (this.props.onDragend) {\n        this._bindDragendEvent();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var map = this.map;\n\n      if (this.props.onZoomend) {\n        map.removeEventListener('zoomend', this.onZoomend);\n      }\n\n      if (this.props.onDragend) {\n        map.removeEventListener('dragend', this.onDragend);\n      }\n    }\n  }, {\n    key: '_bindZoomendEvent',\n    value: function _bindZoomendEvent() {\n      var map = this.map;\n      var _props = this.props,\n          fn = _props.onZoomend,\n          eventType = _props.eventType,\n          delay = _props.delay;\n\n      if (eventType === 'debounce') {\n        this.onZoomend = debounce(fn, delay);\n      } else if (eventType === 'throttle') {\n        this.onZoomend = throttle(fn, delay);\n      } else {\n        this.onZoomend = fn;\n      }\n\n      map.addEventListener('zoomend', this.onZoomend);\n    }\n  }, {\n    key: '_bindDragendEvent',\n    value: function _bindDragendEvent() {\n      var map = this.map;\n      var _props2 = this.props,\n          fn = _props2.onDragend,\n          eventType = _props2.eventType,\n          delay = _props2.delay;\n\n      if (eventType === 'debounce') {\n        this.onDragend = debounce(fn, delay);\n      } else if (eventType === 'throttle') {\n        this.onDragend = throttle(fn, delay);\n      } else {\n        this.onDragend = fn;\n      }\n\n      map.addEventListener('dragend', this.onDragend);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }], [{\n    key: 'defaultProps',\n    get: function get() {\n      return {\n        eventType: 'debounce',\n        // debounce防抖, throttle节流, direct直接执行\n        delay: 500\n      };\n    }\n  }]);\n\n  return MapListener;\n}(_react2.default.Component);\n\nexports.default = MapListener;","map":null,"metadata":{},"sourceType":"script"}