{"ast":null,"code":"import _objectSpread from \"/industry/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/industry/app/src/components/Pie/index.js\";\nimport React, { Component } from 'react';\nimport echarts from 'echarts';\nimport ReactEcharts from 'echarts-for-react';\nimport _ from 'lodash';\nimport { themeOne } from '../echartTheme';\nimport DropList from '../DropList';\n\nclass Pie extends Component {\n  constructor() {\n    super();\n    const option = {\n      tooltip: {\n        trigger: 'item',\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n      },\n      legend: {\n        orient: 'vertical',\n        left: 'left',\n        textStyle: {\n          //图例样式\n          color: '#ffffff',\n          fontSize: '12px'\n        }\n      }\n    };\n    this.state = {\n      option,\n      onChartClick: function () {},\n      viewId: '',\n      onBrushSelected: function () {},\n      onContextmenu: function () {\n        return false;\n      },\n      dropPosition: {\n        x: \"0px\",\n        y: \"0px\"\n      },\n      dropData: [],\n      isexist: false,\n      height: ''\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          pieData = _this$props.pieData,\n          name = _this$props.name,\n          title = _this$props.title,\n          unit = _this$props.unit;\n    let onChartClick;\n    let onContextmenu;\n    let toolbox = {};\n    let viewId = '';\n\n    if (this.props.viewId) {\n      viewId = this.props.viewId;\n    } //点击事件判断\n\n\n    if (!this.props.onChartClick) {\n      onChartClick = function () {};\n    } else {\n      onChartClick = this.props.onChartClick;\n    } //点击事件判断\n\n\n    if (!this.props.onContextmenu) {\n      onContextmenu = function () {\n        return false;\n      };\n    } else {\n      onContextmenu = this.props.onContextmenu;\n    } //判断工具盒是否添加\n\n\n    if (this.props.toolbox) {\n      toolbox = {\n        toolbox: {\n          feature: {\n            dataZoom: {\n              yAxisIndex: 'none'\n            },\n            restore: {},\n            saveAsImage: {}\n          }\n        }\n      };\n    } else {\n      toolbox = {};\n    }\n\n    this.setState({\n      option: Object.assign({}, _objectSpread({}, this.state.option), {\n        series: [{\n          name: name,\n          type: 'pie',\n          radius: '80%',\n          center: ['50%', '60%'],\n          data: pieData,\n          itemStyle: {\n            emphasis: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }],\n        title: {\n          text: title,\n          subtext: '',\n          x: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: \"{a} <br/>{b} : {c}\" + unit + \" ({d}%)\"\n        }\n      }, toolbox),\n      onChartClick,\n      viewId,\n      onContextmenu\n    });\n  } // shouldComponentUpdate(nextProps, nextState){\n  //   if(\n  //     !(\n  //       JSON.stringify(this.props.pieData) === JSON.stringify(nextProps.pieData) &&\n  //       this.props.title === nextProps.title &&\n  //       this.props.name === nextProps.name &&\n  //       this.props.unit === nextProps.unit &&\n  //       JSON.stringify(this.props.dropListInfo) === JSON.stringify(nextProps.dropListInfo)\n  //     )\n  //   ){\n  //     return true\n  //   }else{\n  //     return false\n  //   }\n  // }\n\n\n  componentWillReceiveProps(nextProps) {\n    if (!(JSON.stringify(this.props.pieData) === JSON.stringify(nextProps.pieData) && this.props.title === nextProps.title && this.props.name === nextProps.name && this.props.unit === nextProps.unit && JSON.stringify(this.props.dropListInfo) === JSON.stringify(nextProps.dropListInfo))) {\n      const pieData = nextProps.pieData,\n            name = nextProps.name,\n            title = nextProps.title,\n            unit = nextProps.unit;\n      this.setState({\n        option: Object.assign({}, _objectSpread({}, this.state.option), {\n          series: [{\n            name: name,\n            type: 'pie',\n            radius: '70%',\n            center: ['64%', '60%'],\n            data: pieData,\n            itemStyle: {\n              emphasis: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }]\n        }, {\n          title: {\n            text: title,\n            subtext: '',\n            x: 'center'\n          }\n        }, {\n          tooltip: {\n            trigger: 'item',\n            formatter: \"{a} <br/>{b} : {c}\" + unit + \" ({d}%)\"\n          }\n        }),\n        dropPosition: nextProps.dropListInfo ? nextProps.dropListInfo.dropPosition : {\n          x: \"0px\",\n          y: \"0px\"\n        },\n        dropData: nextProps.dropListInfo ? nextProps.dropListInfo.dropData : [],\n        isexist: nextProps.dropListInfo ? nextProps.dropListInfo.isexist : false\n      });\n    }\n\n    if (this.props.height && this.props.height !== nextProps.height) {\n      this.setState({\n        height: nextProps.height\n      });\n    }\n  }\n\n  render() {\n    echarts.registerTheme('my_theme', themeOne); //const viewId = this.state.viewId\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(ReactEcharts, {\n      option: this.state.option,\n      theme: \"my_theme\",\n      style: {\n        height: this.state.height ? this.state.height + 'px' : '300px'\n      },\n      onEvents: {\n        'click': (params, viewId) => {\n          this.state.onChartClick(params, this.state.viewId);\n        },\n        'contextmenu': (params, viewId) => {\n          const xPosition = params.event.event.clientX;\n          const yPosition = params.event.event.clientY;\n          const position = {\n            x: xPosition,\n            y: yPosition\n          };\n          const dom = params.event.event.target;\n          const curViewId = this.state.viewId;\n          this.state.onContextmenu(params, dom, position, curViewId);\n        }\n      },\n      opts: {\n        renderer: 'canvas'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(DropList, {\n      dropPosition: _.cloneDeep(this.state.dropPosition),\n      dropData: _.cloneDeep(this.state.dropData),\n      isexist: _.cloneDeep(this.state.isexist),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Pie; //viewId 视图ID，通常指这个视图的这条数据ID\n//name   string 指标名称\n//title  string 饼图标题\n//unit string 单位\n//pieData  数组：[{\n//                  name:'',value:\n//                },{\n//                  name:'',value:\n//                }]\n//toolbox  值为布尔值，是否开启工具盒 默认为false\n//onChartClick  值为一个函数，默认为空","map":{"version":3,"sources":["/industry/app/src/components/Pie/index.js"],"names":["React","Component","echarts","ReactEcharts","_","themeOne","DropList","Pie","constructor","option","tooltip","trigger","formatter","legend","orient","left","textStyle","color","fontSize","state","onChartClick","viewId","onBrushSelected","onContextmenu","dropPosition","x","y","dropData","isexist","height","componentDidMount","props","pieData","name","title","unit","toolbox","feature","dataZoom","yAxisIndex","restore","saveAsImage","setState","Object","assign","series","type","radius","center","data","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","text","subtext","componentWillReceiveProps","nextProps","JSON","stringify","dropListInfo","render","registerTheme","params","xPosition","event","clientX","yPosition","clientY","position","dom","target","curViewId","renderer","cloneDeep"],"mappings":"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","sourcesContent":["import React ,{ Component } from 'react'\r\nimport echarts from 'echarts'\r\nimport ReactEcharts from 'echarts-for-react'\r\nimport _ from 'lodash'\r\nimport { themeOne } from '../echartTheme'\r\nimport DropList from '../DropList'\r\nclass Pie extends Component{\r\n  constructor(){\r\n    super()\r\n    const option = {\r\n      tooltip : {\r\n          trigger: 'item',\r\n          formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n      legend: {\r\n          orient: 'vertical',\r\n          left: 'left',\r\n          textStyle:{ //图例样式\r\n            color: '#ffffff',\r\n            fontSize:'12px'\r\n          }\r\n      }\r\n    };\r\n\r\n    this.state={\r\n      option,\r\n      onChartClick: function(){},\r\n      viewId: '',\r\n      onBrushSelected: function(){},\r\n      onContextmenu: function(){return false},\r\n\r\n      dropPosition:{x:\"0px\",y:\"0px\"},\r\n      dropData: [],\r\n      isexist: false,\r\n      height:''\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    const { pieData, name, title, unit} = this.props\r\n    let onChartClick\r\n    let onContextmenu\r\n    let toolbox = {}\r\n    let viewId = ''\r\n    if(this.props.viewId){\r\n      viewId = this.props.viewId\r\n    }\r\n    //点击事件判断\r\n    if(!this.props.onChartClick){\r\n       onChartClick = function(){}\r\n    }else{\r\n       onChartClick = this.props.onChartClick\r\n    }\r\n    //点击事件判断\r\n    if(!this.props.onContextmenu){\r\n       onContextmenu = function(){return false}\r\n    }else{\r\n       onContextmenu = this.props.onContextmenu\r\n    }\r\n    //判断工具盒是否添加\r\n    if(this.props.toolbox){\r\n      toolbox = {\r\n        toolbox: {\r\n          feature: {\r\n            dataZoom: {\r\n              yAxisIndex: 'none'\r\n            },\r\n            restore: {},\r\n            saveAsImage: {}\r\n          }\r\n        }\r\n      }\r\n    }else{\r\n      toolbox = {}\r\n    }\r\n\r\n    this.setState({\r\n      option: Object.assign({},{...this.state.option},{\r\n        series : [\r\n          {\r\n              name: name,\r\n              type: 'pie',\r\n              radius : '80%',\r\n              center: ['50%', '60%'],\r\n              data: pieData,\r\n              itemStyle: {\r\n                  emphasis: {\r\n                      shadowBlur: 10,\r\n                      shadowOffsetX: 0,\r\n                      shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                  }\r\n              }\r\n          }\r\n        ],\r\n        title : {\r\n          text: title,\r\n          subtext: '',\r\n          x:'center'\r\n        },\r\n        tooltip : {\r\n            trigger: 'item',\r\n            formatter: \"{a} <br/>{b} : {c}\"+unit+\" ({d}%)\"\r\n        }\r\n    },\r\n        toolbox\r\n      ),\r\n      onChartClick,\r\n      viewId,\r\n      onContextmenu\r\n    })\r\n  }\r\n  // shouldComponentUpdate(nextProps, nextState){\r\n  //   if(\r\n  //     !(\r\n  //       JSON.stringify(this.props.pieData) === JSON.stringify(nextProps.pieData) &&\r\n  //       this.props.title === nextProps.title &&\r\n  //       this.props.name === nextProps.name &&\r\n  //       this.props.unit === nextProps.unit &&\r\n  //       JSON.stringify(this.props.dropListInfo) === JSON.stringify(nextProps.dropListInfo)\r\n  //     )\r\n  //   ){\r\n  //     return true\r\n  //   }else{\r\n  //     return false\r\n  //   }\r\n  // }\r\n  componentWillReceiveProps(nextProps){\r\n    if(\r\n      !(\r\n        JSON.stringify(this.props.pieData) === JSON.stringify(nextProps.pieData) &&\r\n        this.props.title === nextProps.title &&\r\n        this.props.name === nextProps.name &&\r\n        this.props.unit === nextProps.unit &&\r\n        JSON.stringify(this.props.dropListInfo) === JSON.stringify(nextProps.dropListInfo)\r\n      )\r\n    ){\r\n      const { pieData, name, title, unit} = nextProps\r\n      this.setState({\r\n        option: Object.assign({},{...this.state.option},{\r\n          series : [\r\n            {\r\n                name: name,\r\n                type: 'pie',\r\n                radius : '70%',\r\n                center: ['64%', '60%'],\r\n                data: pieData,\r\n                itemStyle: {\r\n                    emphasis: {\r\n                        shadowBlur: 10,\r\n                        shadowOffsetX: 0,\r\n                        shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                    }\r\n                }\r\n            }\r\n          ]},{\r\n          title : {\r\n            text: title,\r\n            subtext: '',\r\n            x:'center'\r\n          }\r\n        },{\r\n          tooltip : {\r\n              trigger: 'item',\r\n              formatter: \"{a} <br/>{b} : {c}\"+unit+\" ({d}%)\"\r\n          }\r\n        }),\r\n        dropPosition: nextProps.dropListInfo?nextProps.dropListInfo.dropPosition:{x:\"0px\",y:\"0px\"},\r\n        dropData: nextProps.dropListInfo?nextProps.dropListInfo.dropData:[],\r\n        isexist: nextProps.dropListInfo?nextProps.dropListInfo.isexist:false,\r\n      })\r\n    }\r\n    if(this.props.height && this.props.height !== nextProps.height){\r\n      this.setState({\r\n        height: nextProps.height\r\n      })\r\n    }\r\n  }\r\n  render(){\r\n    echarts.registerTheme('my_theme',themeOne)\r\n    //const viewId = this.state.viewId\r\n    return(\r\n      <div>\r\n        <ReactEcharts\r\n          option={this.state.option}\r\n          theme=\"my_theme\"\r\n          style={{height:this.state.height?this.state.height+'px':'300px'}}\r\n          onEvents={\r\n            {\r\n              'click': (params,viewId)=>{this.state.onChartClick(params,this.state.viewId)},\r\n              'contextmenu':(params,viewId)=>{\r\n                const xPosition = params.event.event.clientX\r\n                const yPosition = params.event.event.clientY\r\n                const position= {\r\n                  x: xPosition,\r\n                  y: yPosition\r\n                }\r\n                const dom = params.event.event.target\r\n                const curViewId = this.state.viewId\r\n                this.state.onContextmenu(params,dom,position,curViewId)\r\n              },\r\n            }\r\n          }\r\n          opts={{renderer: 'canvas'}}\r\n        />\r\n        <DropList\r\n          dropPosition={_.cloneDeep(this.state.dropPosition)}\r\n          dropData={_.cloneDeep(this.state.dropData)}\r\n          isexist={_.cloneDeep(this.state.isexist)}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pie\r\n\r\n//viewId 视图ID，通常指这个视图的这条数据ID\r\n//name   string 指标名称\r\n//title  string 饼图标题\r\n//unit string 单位\r\n//pieData  数组：[{\r\n//                  name:'',value:\r\n//                },{\r\n//                  name:'',value:\r\n//                }]\r\n\r\n//toolbox  值为布尔值，是否开启工具盒 默认为false\r\n//onChartClick  值为一个函数，默认为空\r\n"]},"metadata":{},"sourceType":"module"}