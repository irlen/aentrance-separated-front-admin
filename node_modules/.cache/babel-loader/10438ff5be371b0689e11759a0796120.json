{"ast":null,"code":"var _jsxFileName = \"/industry/app/src/DashboardManage/TemplateForColumn.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport { withRouter } from 'react-router';\nimport { wyAxiosPost } from '../components/WyAxios';\nimport WyDatePicker from '../components/WyDatePicker';\nimport WySpin from '../components/WySpin';\nimport Column from '../components/Column'; //import contextList from '../SubPage/ContextList'\n\nclass TemplateForColumn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      xData: [],\n      yData: [],\n      aUnit: '',\n      isSpining: false,\n      autoHeight: 300,\n      subTime: [],\n      showViewData: {},\n      updateTime: 0,\n      secondData: {} //获取数据\n\n    };\n\n    this.getCurViewData = () => {\n      if (this.state.showViewData.data && Object.keys(this.state.showViewData.data).length > 0) {\n        const info = _.cloneDeep(this.state.showViewData.data);\n\n        info.viewType = this.state.showViewData.viewType;\n        info.pageId = this.props.pageId;\n\n        if (this.state.subTime.length > 0 && this.props.env !== 'set') {\n          info.start_time = this.state.subTime[0];\n          info.last_time = this.state.subTime[1];\n        }\n\n        wyAxiosPost('Dashboard/getModuleData', {\n          info\n        }, result => {\n          const responseData = result.data.msg;\n          console.log(responseData);\n\n          if (this.state.subTime.length === 0) {\n            const curTime = [];\n            curTime.push(responseData.start_time);\n            curTime.push(responseData.last_time);\n            this.setState({\n              xData: responseData.xxx,\n              yData: responseData.yyy,\n              aUnit: responseData.unit,\n              subTime: _.cloneDeep(curTime),\n              secondData: responseData.secondData ? responseData.secondData : {}\n            });\n          } else {\n            this.setState({\n              xData: responseData.xxx,\n              yData: responseData.yyy,\n              aUnit: responseData.unit,\n              secondData: responseData.secondData ? responseData.secondData : {}\n            });\n          }\n        });\n      }\n    };\n\n    this.getCurViewDataForFresh = () => {\n      if (this.state.showViewData.data && Object.keys(this.state.showViewData.data).length > 0) {\n        const info = _.cloneDeep(this.state.showViewData.data);\n\n        info.viewType = this.state.showViewData.viewType; //info.api = this.state.showViewData.data.dataMethod\n\n        wyAxiosPost('Dashboard/getModuleData', {\n          info\n        }, result => {\n          const responseData = result.data.msg;\n          const curTime = [];\n          curTime.push(responseData.start_time);\n          curTime.push(responseData.last_time);\n          this.setState({\n            xData: responseData.xxx,\n            yData: responseData.yyy,\n            aUnit: responseData.unit,\n            subTime: _.cloneDeep(curTime),\n            secondData: responseData.secondData ? responseData.secondData : {}\n          });\n        });\n      }\n    };\n\n    this.subTimeChange = (value, event) => {\n      this.setState({\n        subTime: value\n      }, () => {\n        this.getCurViewData();\n      });\n    };\n\n    this.updateData = () => {\n      if (this.columnTimer1) {\n        clearInterval(this.columnTimer1);\n      }\n\n      const run = () => {\n        if (this.state.updateTime !== 0) {\n          if (this.columnTimer2) {\n            clearInterval(this.columnTimer2);\n          }\n\n          let time = this.state.updateTime;\n          this.columnTimer2 = setInterval(() => {\n            this.getCurViewDataForFresh();\n          }, time * 1000);\n\n          if (this.columnTimer1) {\n            clearInterval(this.columnTimer1);\n          }\n        } else {\n          if (this.columnTimer2) {\n            clearInterval(this.columnTimer2);\n          }\n        }\n      };\n\n      this.columnTimer1 = setInterval(run, 5000);\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      showViewData: this.props.showViewData,\n      autoHeight: this.props.autoHeight,\n      updateTime: this.props.updateTime\n    }, () => {\n      this.getCurViewData();\n\n      if (this.state.updateTime && this.props.env !== 'set') {\n        this.updateData();\n      }\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!_.isEqual(this.props.showViewData, nextProps.showViewData) || this.props.autoHeight !== nextProps.autoHeight || this.props.updateTime && nextProps.upDateTime && this.props.updateTime !== nextProps.upDateTime) {\n      this.setState({\n        showViewData: nextProps.showViewData,\n        autoHeight: nextProps.autoHeight,\n        updateTime: nextProps.updateTime\n      }, () => {\n        this.getCurViewData();\n\n        if (this.state.updateTime && this.props.env !== 'set') {\n          this.updateData();\n        }\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.columnTimer1) {\n      clearInterval(this.columnTimer1);\n    }\n\n    if (this.columnTimer2) {\n      clearInterval(this.columnTimer2);\n    }\n  } // chartContextmenu = (params,dom,position,viewId)=>{\n  //   $('.drcontainer').removeClass('dropShow').addClass('dropHide')\n  //   $(dom).closest('.gridContainer').find('.drcontainer').removeClass('dropHide').addClass('dropShow')\n  //   if(this.state.secondData){\n  //     const {listType,objType} = this.state.secondData\n  //     let info ={\n  //       listType,\n  //       start_time: this.state.subTime[0],\n  //       last_time: this.state.subTime[1],\n  //       obj: params.name,\n  //       objType,\n  //       previousPath:this.props.location.pathname\n  //     }\n  //     this.props.setDropListInfo({\n  //        dropData: contextList(info),\n  //        dropPosition: {x:position.x+\"px\",y:position.y+\"px\"},\n  //        isexist: true\n  //     })\n  //   }\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"amodule\",\n      style: {\n        margin: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, this.props.env === 'set' ? '' : React.createElement(\"div\", {\n      className: \"moduleHeader\",\n      style: {\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"moduleHeaderIn\",\n      style: {\n        flex: \"1 1 auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, this.state.showViewData.data && Object.keys(this.state.showViewData.data).length > 0 ? this.state.showViewData.data.moduleName : ''), React.createElement(\"div\", {\n      style: {\n        float: \"right\",\n        flex: \"0 0 300px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(WyDatePicker, {\n      curTime: this.state.subTime,\n      rangeTimeChange: this.subTimeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"moduleBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(WySpin, {\n      isSpining: this.state.isSpining,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Column, {\n      xData: this.state.xData ? this.state.xData : [],\n      yData: this.state.yData ? this.state.yData : [],\n      aUnit: this.state.aUnit,\n      height: this.state.autoHeight //onContextmenu={this.chartContextmenu}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withRouter(TemplateForColumn);","map":{"version":3,"sources":["/industry/app/src/DashboardManage/TemplateForColumn.js"],"names":["React","Component","_","$","withRouter","wyAxiosPost","WyDatePicker","WySpin","Column","TemplateForColumn","state","xData","yData","aUnit","isSpining","autoHeight","subTime","showViewData","updateTime","secondData","getCurViewData","data","Object","keys","length","info","cloneDeep","viewType","pageId","props","env","start_time","last_time","result","responseData","msg","console","log","curTime","push","setState","xxx","yyy","unit","getCurViewDataForFresh","subTimeChange","value","event","updateData","columnTimer1","clearInterval","run","columnTimer2","time","setInterval","componentDidMount","componentWillReceiveProps","nextProps","isEqual","upDateTime","componentWillUnmount","render","margin","display","flex","moduleName","float"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport _ from 'lodash'\r\nimport $ from 'jquery'\r\nimport { withRouter } from 'react-router'\r\n\r\nimport { wyAxiosPost } from '../components/WyAxios'\r\nimport WyDatePicker from '../components/WyDatePicker'\r\nimport WySpin from '../components/WySpin'\r\nimport Column from '../components/Column'\r\n//import contextList from '../SubPage/ContextList'\r\n\r\nclass TemplateForColumn extends Component{\r\n  state={\r\n    xData: [],\r\n    yData: [],\r\n    aUnit:'',\r\n\r\n    isSpining: false,\r\n    autoHeight: 300,\r\n    subTime: [],\r\n    showViewData:{},\r\n    updateTime: 0,\r\n    secondData:{}\r\n  }\r\n\r\n  //获取数据\r\n  getCurViewData = ()=>{\r\n    if(this.state.showViewData.data && Object.keys(this.state.showViewData.data).length>0){\r\n      const info = _.cloneDeep(this.state.showViewData.data)\r\n      info.viewType = this.state.showViewData.viewType\r\n      info.pageId = this.props.pageId\r\n      if(this.state.subTime.length>0 && this.props.env !== 'set'){\r\n        info.start_time = this.state.subTime[0]\r\n        info.last_time = this.state.subTime[1]\r\n      }\r\n      wyAxiosPost('Dashboard/getModuleData',{info},(result)=>{\r\n        const responseData = result.data.msg\r\n        console.log(responseData)\r\n        if(this.state.subTime.length === 0){\r\n          const curTime = []\r\n          curTime.push(responseData.start_time)\r\n          curTime.push(responseData.last_time)\r\n          this.setState({\r\n            xData: responseData.xxx,\r\n            yData: responseData.yyy,\r\n            aUnit: responseData.unit,\r\n            subTime: _.cloneDeep(curTime),\r\n            secondData: responseData.secondData?responseData.secondData:{}\r\n          })\r\n        }else{\r\n          this.setState({\r\n            xData: responseData.xxx,\r\n            yData: responseData.yyy,\r\n            aUnit: responseData.unit,\r\n            secondData: responseData.secondData?responseData.secondData:{}\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n  getCurViewDataForFresh = ()=>{\r\n    if(this.state.showViewData.data && Object.keys(this.state.showViewData.data).length>0){\r\n      const info = _.cloneDeep(this.state.showViewData.data)\r\n      info.viewType = this.state.showViewData.viewType\r\n      //info.api = this.state.showViewData.data.dataMethod\r\n\r\n      wyAxiosPost('Dashboard/getModuleData',{info},(result)=>{\r\n        const responseData = result.data.msg\r\n        const curTime = []\r\n        curTime.push(responseData.start_time)\r\n        curTime.push(responseData.last_time)\r\n        this.setState({\r\n          xData: responseData.xxx,\r\n          yData: responseData.yyy,\r\n          aUnit: responseData.unit,\r\n          subTime: _.cloneDeep(curTime),\r\n          secondData: responseData.secondData?responseData.secondData:{}\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  subTimeChange = (value,event)=>{\r\n    this.setState({\r\n      subTime: value\r\n    },()=>{\r\n      this.getCurViewData()\r\n    })\r\n  }\r\n  //数据更新\r\n  updateData = ()=>{\r\n    if(this.columnTimer1){\r\n      clearInterval(this.columnTimer1)\r\n    }\r\n    const run = ()=>{\r\n      if(this.state.updateTime !== 0){\r\n        if(this.columnTimer2){\r\n          clearInterval(this.columnTimer2)\r\n        }\r\n        let time = this.state.updateTime\r\n        this.columnTimer2 = setInterval(()=>{\r\n          this.getCurViewDataForFresh()\r\n        },time*1000)\r\n        if(this.columnTimer1){\r\n          clearInterval(this.columnTimer1)\r\n        }\r\n      }else{\r\n        if(this.columnTimer2){\r\n          clearInterval(this.columnTimer2)\r\n        }\r\n      }\r\n    }\r\n    this.columnTimer1 = setInterval(run,5000)\r\n  }\r\n  componentDidMount(){\r\n    this.setState({\r\n      showViewData: this.props.showViewData,\r\n      autoHeight: this.props.autoHeight,\r\n      updateTime: this.props.updateTime\r\n    },()=>{\r\n      this.getCurViewData()\r\n      if(this.state.updateTime && this.props.env !== 'set'){\r\n        this.updateData()\r\n      }\r\n    })\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n    if(\r\n      ! (_.isEqual(this.props.showViewData,nextProps.showViewData)) ||\r\n      this.props.autoHeight !== nextProps.autoHeight ||\r\n      (this.props.updateTime && nextProps.upDateTime && this.props.updateTime !== nextProps.upDateTime)\r\n    ){\r\n      this.setState({\r\n        showViewData: nextProps.showViewData,\r\n        autoHeight: nextProps.autoHeight,\r\n        updateTime: nextProps.updateTime\r\n      },()=>{\r\n        this.getCurViewData()\r\n        if(this.state.updateTime && this.props.env !== 'set'){\r\n          this.updateData()\r\n        }\r\n      })\r\n    }\r\n  }\r\n  componentWillUnmount(){\r\n    if(this.columnTimer1){\r\n      clearInterval(this.columnTimer1)\r\n    }\r\n    if(this.columnTimer2){\r\n      clearInterval(this.columnTimer2)\r\n    }\r\n  }\r\n  // chartContextmenu = (params,dom,position,viewId)=>{\r\n  //   $('.drcontainer').removeClass('dropShow').addClass('dropHide')\r\n  //   $(dom).closest('.gridContainer').find('.drcontainer').removeClass('dropHide').addClass('dropShow')\r\n  //   if(this.state.secondData){\r\n  //     const {listType,objType} = this.state.secondData\r\n  //     let info ={\r\n  //       listType,\r\n  //       start_time: this.state.subTime[0],\r\n  //       last_time: this.state.subTime[1],\r\n  //       obj: params.name,\r\n  //       objType,\r\n  //       previousPath:this.props.location.pathname\r\n  //     }\r\n  //     this.props.setDropListInfo({\r\n  //        dropData: contextList(info),\r\n  //        dropPosition: {x:position.x+\"px\",y:position.y+\"px\"},\r\n  //        isexist: true\r\n  //     })\r\n  //   }\r\n  // }\r\n  render(){\r\n    return(\r\n      <div className=\"amodule\" style={{margin:\"0px\"}}>\r\n      {\r\n        this.props.env === 'set'?\r\n        ''\r\n        :\r\n        <div className=\"moduleHeader\" style={{display:\"flex\"}}>\r\n          <div className=\"moduleHeaderIn\"style={{flex:\"1 1 auto\"}}>\r\n            {this.state.showViewData.data && Object.keys(this.state.showViewData.data).length>0?this.state.showViewData.data.moduleName:''}\r\n          </div>\r\n            <div style={{float: \"right\",flex:\"0 0 300px\"}}>\r\n              <WyDatePicker curTime={this.state.subTime} rangeTimeChange={this.subTimeChange}/>\r\n            </div>\r\n        </div>\r\n      }\r\n        <div className=\"moduleBody\">\r\n          <WySpin isSpining={this.state.isSpining}>\r\n            <Column\r\n              xData={this.state.xData?this.state.xData:[]}\r\n              yData={this.state.yData?this.state.yData:[]}\r\n              aUnit={this.state.aUnit}\r\n              height={this.state.autoHeight}\r\n              //onContextmenu={this.chartContextmenu}\r\n            />\r\n          </WySpin>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(TemplateForColumn)\r\n"]},"metadata":{},"sourceType":"module"}